<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>有关GFW，即通常所说的「墙」的一些事情</title>
    <link href="/2022/10/02/%E6%9C%89%E5%85%B3GFW%EF%BC%8C%E5%8D%B3%E9%80%9A%E5%B8%B8%E6%89%80%E8%AF%B4%E7%9A%84%E3%80%8C%E5%A2%99%E3%80%8D%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BA%8B%E6%83%85/"/>
    <url>/2022/10/02/%E6%9C%89%E5%85%B3GFW%EF%BC%8C%E5%8D%B3%E9%80%9A%E5%B8%B8%E6%89%80%E8%AF%B4%E7%9A%84%E3%80%8C%E5%A2%99%E3%80%8D%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BA%8B%E6%83%85/</url>
    
    <content type="html"><![CDATA[<p>这个算是一个比较敏感的话题，所以我先声明一下几点内容：在这篇文章里，我不会提及任何关于突破内容审查机制的关键词，不介绍、传播、扩散任何关于突破内容审查机制的工具。任何技术探究均在个人的局域网中完成，使用的信道均为国家网络运营商提供的合法有效的信道。</p><p>1987年，一封邮件从中国发往德国，标志着中国正式介入了国际互联网。内容是“Across the Great Wall we can reach every corner in the world！”——“穿越长城，我们可以到达世界的任何角落！”</p><p>然而在十几年后的今天，中国的互联网逐渐成为了“局域网”。</p><h2 id="事先说明"><a href="#事先说明" class="headerlink" title="事先说明"></a>事先说明</h2><p>这个算是一个比较敏感的话题，所以我先声明一下几点内容：在这篇文章里，我不会提及任何关于突破内容审查机制的关键词，不介绍、传播、扩散任何关于突破内容审查机制的工具。任何技术探究均在个人的局域网中完成，使用的信道均为国家网络运营商提供的合法有效的信道。</p><p>友情提示：GFW在2021年11月中国国家互联网信息办公室发布的《网络数据安全管理条例（征求意见稿）》中被称为跨境安全网关，用于阻断访问境外反动网站和有害信息、防止来自境外的网络攻击、管控跨境网络数据传输、防范侦查打击跨境网络犯罪。擅自使用、搭建国际信道涉嫌违法，并有因此而被逮捕的事例，请各位慎重行事。</p><h2 id="GFW是什么"><a href="#GFW是什么" class="headerlink" title="GFW是什么"></a>GFW是什么</h2><p>GFW：Great Firewall (of the People’s Republic of China)，中国国家防火墙，也称长城防火墙，是中国政府在其互联网边界的审查系统，具体指监控和过滤互联网内容的软硬件系统，由软件和硬件共同组成，据2010年的相关推测，防火长城可能拥有数百台曙光4000L服务器。</p><p>形象的描述，在没有 GFW 的时代，访问互联网的方式如下</p><p><img src="https://febers.github.io/%E7%BF%BB%E8%B6%8AGFW%E8%AE%B0/%E5%8E%9F%E5%A7%8B%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F.png" alt="原始连接方式"></p><p>GFW 出现之后，则变成了</p><p><img src="https://febers.github.io/%E7%BF%BB%E8%B6%8AGFW%E8%AE%B0/GFW%E5%AD%98%E5%9C%A8%E5%90%8E%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F.png" alt="GFW存在后的连接方式"></p><h3 id="如何做到的"><a href="#如何做到的" class="headerlink" title="如何做到的"></a>如何做到的</h3><p>由于中国的国际出口只有北京、上海等地，而所有的国际出口处都设有GFW，所以国内发往国外的数据信息必定会经过GFW的监管，没有可行方法绕过。</p><h4 id="域名服务器缓存污染"><a href="#域名服务器缓存污染" class="headerlink" title="域名服务器缓存污染"></a>域名服务器缓存污染</h4><p>实际上，在很早很早以前，人们需要通过输入IP地址来访问网站。IP地址全是一堆数字，中间夹杂着几个不明意义的点，实在是太难记了。于是后来人们就发明了域名这个东西（例如 cn.bing.com ），每个域名对应一个IP地址，所以现在人们只需要记住域名就可以访问网站了。</p><p>但是浏览器是怎么知道每个域名对应的什么网站的呢？于是就有了DNS服务器。浏览器在每次访问一个网址的时候，会先在本机的hosts文件中找对应的IP地址，如果没有找到的话，就会向上一级的DNS服务器发出请求来询问这个域名所对应的IP地址，如果这个DNS服务器也不知道的话，就会向更上一层的DNS服务器询问。世界上总共有十三台最高级的DNS服务器，而这些服务器全都属于西方国家，在中国只有几台备份。</p><p>有了域名纵然是个好事，但这就给了GFW”可乘之机“。</p><p>在上面我们提到过，由于根DNS服务器不在中国，所以中国无法从根本上通过修改DNS服务器来禁止访问某些网站。同时我们在最开始也提到过，所有发往境外的数据包必先经过GFW的审查，所以中国开始在GFW上动起了手脚。</p><p>你可能在访问某些网站时发现这个网站被浏览器提示为“不安全”，那时因为这个网站使用了HTTP协议，HTTP协议下，你和网站之间的通信是不加密的，意味着任何人都可以看到你和网站间干了什么。</p><p>而在十几年以前，世界上绝大多数的网站都是使用HTTP协议。于是GFW会检测你发往国外的数据包里是否含有敏感的信息，如果发现了就会拦截下来，并且给你指向一个错误的IP地址，而且域名查询通常基于的UDP协议是无连接不可靠的协议，查询者无法验证返回结果的正确性。你的电脑接收到了IP地址，开开心心地准备访问，却发现那个IP地址是根本无法打开你本来想要访问的网站的。并且由于DNS服务器会缓存来加快速度，所以这个域名对应的错误的IP地址就会被存储在DNS服务器中，从而导致其他想要访问这个网站的也被导向错误的IP地址。真像在河流的上游投毒导致整条河流都出现问题，投毒这个名词也因此而来。</p><h4 id="TCP连接重置"><a href="#TCP连接重置" class="headerlink" title="TCP连接重置"></a>TCP连接重置</h4><p>GFW的手段当然不止上面这一种。</p><p>TCP重置用于重置连接。一般来说，例如服务器端在没有客户端请求的端口或者其它连接信息不符时，系统就会给客户端回复一个RESET通知消息，可见RESET功能本来用于应对例如服务器意外重启等情况。GFW由于在地理位置上更加靠近双方，所以可以在双方建立联系前给双方发送TCP连接重置，使双方认为对方停止了连接从而断开连接。</p><p>在2009年以前这个机制还不太成熟，那时的人们还能愉快地上Google，查Wikipedia（维基百科），学习西方先进科技。不时有好事者，会键入诸如「溜寺」之类这样的神奇词汇，于是区域范围内与Google失联数十分钟。每当到这个时候，周遭网民反映：「哦，谁又撞墙了！」但打壶开水，泡一杯面，还不等吃完，就又可以Google了。</p><p>那个时候的「墙」就好像霰弹枪，火力充足，但瞄不太准。一枪下去，打一大片，总是搞得「城门失火，殃及池鱼」。</p><h3 id="域名服务器污染造成的相关事件"><a href="#域名服务器污染造成的相关事件" class="headerlink" title="域名服务器污染造成的相关事件"></a>域名服务器污染造成的相关事件</h3><p><strong>2010年3月</strong>，一名智利域名注册商的技术人员发现向位于国的根服务器查询<a href="https://link.zhihu.com/?target=HTTP://facebook.com">http://facebook.com</a>、<a href="https://link.zhihu.com/?target=HTTP://youtube.com">http://youtube.com</a>和<a href="https://link.zhihu.com/?target=http://twitter.com">http://twitter.com</a>等域名时的回复不正常。中国根服务器运营商Netnod于是暂时切断了其与网际网络的连接。安全专家认为这与Netnod（工作人员）无关，而是ZF修改某处网络时造成的污染导致Z国的根服务器被关。同年3月，Google位于北京中关村的办公室楼下堆满了鲜花，网友以这种方式纪念因「遭受Z国黑客攻击」和「网络审查」而决定退出中Z国大 市场的Google。</p><p><strong>2012年11月9日下午3点半</strong>开始，防火长城对Google的泛域名*.<a href="https://link.zhihu.com/?target=http://google.com">http://google.com</a>进行了大规模的污染，所有以.<a href="https://link.zhihu.com/?target=http://google.com">http://google.com</a>结尾的域名均遭到污染而解析错误不能正常存取，其中甚至包括不存在的域名，而Google为各国客制化的域名也遭到不同程度的污染（因为Google通过使用CNAME记录来平衡存取的流量，CNAME记录大多亦为.<a href="https://link.zhihu.com/?target=http://google.com">http://google.com</a>结尾），但Google拥有的其它域名如.<a href="https://link.zhihu.com/?target=http://googleusercontent.com">http://googleusercontent.com</a>等则不受影响。</p><p><strong>2014年1月21日下午三点半</strong>，中国网际网络顶级域名解析不正常，出错网站解析到的IP是65.49.2.178，这个IP位于美国加利福尼亚州费利蒙市Hurricane Electric公司，被Dynamic Internet  Technology（即自由门的开发公司）租用于翻墙软件连接节点。有研究人员认为这是因为防火长城的工作人员操作失误。</p><p><strong>2015年1月2日</strong>起，污染方式升级，不再是解析到固定的无效位址（例如环回位址，全零位址即0.0.0.0等），而是随机地指向境外的非保留IP位址。刚开始只是对YouTube视频域名（*.<a href="https://link.zhihu.com/?target=http://googlevideo.com">http://googlevideo.com</a>）进行处理，之后逐渐扩大到大多数被污染的域名。这导致了境外服务器遭受来自中国的DDoS攻击，部分网站因此封锁中国IP。</p><p><strong>2016年3月29日</strong>起，防火长城针对Google升级了污染方式。在一开始升级过后，所有包含google，gmail等关键词的域名查询均被污染，导致很多使用者一时间完全无法正常使用Gmail服务。之后，防火长城对规则进行了调整。其中，对于*.<a href="https://link.zhihu.com/?target=http://google.com">http://google.com</a>域名污染主域名（<a href="https://link.zhihu.com/?target=http://google.com">http://google.com</a>，不包括www）及部分服务域名（<a href="https://link.zhihu.com/?target=http://drive.google.com">http://drive.google.com</a>，<a href="https://link.zhihu.com/?target=http://plus.google.com">http://plus.google.com</a>等），而针对地区域名则选择性地污染泛域名（*.<a href="https://link.zhihu.com/?target=http://google.com.hk">http://google.com.hk</a>，*.<a href="https://link.zhihu.com/?target=http://google.ru">http://google.ru</a>等），其他地区的域名则不受影响（*.<a href="https://link.zhihu.com/?target=http://google.us">http://google.us</a>等）</p><h3 id="应对的方法"><a href="#应对的方法" class="headerlink" title="应对的方法"></a>应对的方法</h3><h4 id="修改Hosts文件"><a href="#修改Hosts文件" class="headerlink" title="修改Hosts文件"></a>修改Hosts文件</h4><p>Hosts 文件是一个储存计算机网络中各节点信息的文件，负责将主机名映射到相应的IP地址，通常用于补充或取代网络中DNS的功能。和DNS不同的是，用户可以直接对 Hosts 文件进行控制。</p><p>Hosts 文件的原本目的是提高解析的效率。在进行 DNS 请求以前，系统先检查自己的 Hosts 文件中是否有地址映射关系，由于 Hosts 的请求级别比DNS高，当 Hosts 文件里面有对应的IP地址时，客户端就会直接访问那个IP地址，而不必通过 DNS。各操作系统的 Hosts  文件各有不同，网络上有很多相关资料，在此不赘述。</p><p>所以，将 Google、Twitter、Facebook 之类的IP放入 Hosts 文件，就可以不受 GFW 的 DNS 污染干扰。但由于 GFW 的IP地址封锁，大多数情况下，该方法很难有效。</p><h4 id="使用ipv6访问网站"><a href="#使用ipv6访问网站" class="headerlink" title="使用ipv6访问网站"></a>使用ipv6访问网站</h4><p>ipv6的数量极多，从而大大地增加了GFW封锁IP地址的难度。但现在ipv6尚未普及，且GFW开始对ipv6亦有相应的措施，此方法只在很早以前的一小段时间内有效。</p><h2 id="发展"><a href="#发展" class="headerlink" title="发展"></a>发展</h2><p>过了几年后，人们终于开始意识到了隐私的重要性，于是HTTPS（HTTP over TLS）协议横空出世。TLS会在用户和网站之间建立联系的过程中进行“三次握手”来建立端到端加密，从而使得第三方无法探测到两者之间发送了什么内容。</p><h3 id="DNS污染重出江湖"><a href="#DNS污染重出江湖" class="headerlink" title="DNS污染重出江湖"></a>DNS污染重出江湖</h3><p>但是，即使内容加密了，而用户对DNS根服务器的请求信息却依旧是明文的，仍然可以使用DNS污染的方法使得用户无法访问到想要访问的网站。</p><h4 id="应对的方法-1"><a href="#应对的方法-1" class="headerlink" title="应对的方法"></a>应对的方法</h4><p>DoH（DNS over HTTPS）可以将DNS以加密的方式传输，从而消除DNS污染的可能性，在绝大多数浏览器中均有支持。</p><p>DoT（DNS over TLS）也可以将DNS以加密的方式传输，但是几乎无主流浏览器支持。</p><h3 id="SNI闯大祸"><a href="#SNI闯大祸" class="headerlink" title="SNI闯大祸"></a>SNI闯大祸</h3><p>这时有人可能就要问了：“诶，你上面不是说可以通过修改 Hosts 文件和使用DoH、DoT来规避DNS污染的吗，为什么大伙都没发现这个好方法呢？”这时就要引出另一个东西了——SNI。</p><p>在TLS的握手信息中并没有携带我们要访问的目标地址，这样会导致一个问题，如果一台服务器有多个主机，且每个主机的域名不一样，使用了不一样的证书，该和哪台主机进行通信？和HTTP协议用来解决服务器多域名的方案类似：HTTP 在请求中会发送一个字段来指定要访问的域名。而TLS 的做法会在和网站的第一次握手中会告诉网站我要访问哪个服务器，这个消息就被称为SNI。</p><p>SNI是不加密的，所以GFW可以通过判断你发送的SNI来确认你访问的网站是否为违禁网站，如果是的话则使用类似TCP连接重置的方法来阻断连接。</p><h4 id="应对的方法-2"><a href="#应对的方法-2" class="headerlink" title="应对的方法"></a>应对的方法</h4><h4 id="ESNI或者ECH"><a href="#ESNI或者ECH" class="headerlink" title="ESNI或者ECH"></a>ESNI或者ECH</h4><p>ESNI或ECH可以将SNI的消息加密发送从而使得GFW无法通过检测SNI来屏蔽网站，在2018年左右可用。但是后来GFW一刀切，将所有的ESNI或ECH的连接全部阻断，使得只能使用明文传递SNI，从而阻断了这一方法的可行性。</p><p>可以预见的是，在不久的将来，GFW与各类新兴技术的博弈不会停止。愿中国早日取消GFW，与国际社会真正接轨。</p>]]></content>
    
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>雪藏在开源镜像站点中的那些常用却不为人知的软件</title>
    <link href="/2022/10/02/%E9%9B%AA%E8%97%8F%E5%9C%A8%E5%BC%80%E6%BA%90%E9%95%9C%E5%83%8F%E7%AB%99%E7%82%B9%E4%B8%AD%E7%9A%84%E9%82%A3%E4%BA%9B%E5%B8%B8%E7%94%A8%E5%8D%B4%E4%B8%8D%E4%B8%BA%E4%BA%BA%E7%9F%A5%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    <url>/2022/10/02/%E9%9B%AA%E8%97%8F%E5%9C%A8%E5%BC%80%E6%BA%90%E9%95%9C%E5%83%8F%E7%AB%99%E7%82%B9%E4%B8%AD%E7%9A%84%E9%82%A3%E4%BA%9B%E5%B8%B8%E7%94%A8%E5%8D%B4%E4%B8%8D%E4%B8%BA%E4%BA%BA%E7%9F%A5%E7%9A%84%E8%BD%AF%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>前两天在下载 微PE 的时候眼睛突然一瞥，发现了山东大学的开源镜像站。突然间才发现在各个开源镜像站点中提供了许多那些我们误以为只能顶着断断续续的 Github  才能下载的软件。</p><p>下面这张列表主要来自山东大学的镜像站中的「常用软件」和南京大学的「github-release」。~~~~</p><table><thead><tr><th></th><th><a href="https://mirrors.sdu.edu.cn/">山东大学</a></th><th><a href="https://mirrors.nju.edu.cn/">南京大学</a></th><th><a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学</a></th></tr></thead><tbody><tr><td>7-zip</td><td><a href="https://mirrors.sdu.edu.cn/software/Windows/7-Zip/">https://mirrors.sdu.edu.cn/software/Windows/7-Zip/</a></td><td></td><td></td></tr><tr><td>balena-io&#x2F;etcher</td><td></td><td><a href="https://mirrors.nju.edu.cn/github-release/balena-io/etcher/LatestRelease/">https://mirrors.nju.edu.cn/github-release/balena-io/etcher/LatestRelease/</a></td><td><a href="https://mirrors.tuna.tsinghua.edu.cn/github-release/balena-io/etcher/LatestRelease/">https://mirrors.tuna.tsinghua.edu.cn/github-release/balena-io/etcher/LatestRelease/</a></td></tr><tr><td>git-for-windows</td><td><a href="https://mirrors.sdu.edu.cn/github-release/git-for-windows_git/">https://mirrors.sdu.edu.cn/github-release/git-for-windows_git/</a></td><td><a href="https://mirrors.nju.edu.cn/github-release/git-for-windows/git/LatestRelease/">https://mirrors.nju.edu.cn/github-release/git-for-windows/git/LatestRelease/</a></td><td><a href="https://mirrors.tuna.tsinghua.edu.cn/github-release/git-for-windows/git/LatestRelease/">https://mirrors.tuna.tsinghua.edu.cn/github-release/git-for-windows/git/LatestRelease/</a></td></tr><tr><td>Krita</td><td></td><td><a href="https://mirrors.nju.edu.cn/kde/stable/krita/">https://mirrors.nju.edu.cn/kde/stable/krita/</a></td><td></td></tr><tr><td>libreoffice</td><td></td><td></td><td><a href="https://mirrors.tuna.tsinghua.edu.cn/libreoffice/libreoffice/">https://mirrors.tuna.tsinghua.edu.cn/libreoffice/libreoffice/</a></td></tr><tr><td>Magisk</td><td></td><td><a href="https://mirrors.nju.edu.cn/github-release/topjohnwu/Magisk/LatestRelease/">https://mirrors.nju.edu.cn/github-release/topjohnwu/Magisk/LatestRelease/</a></td><td><a href="https://mirrors.tuna.tsinghua.edu.cn/github-release/topjohnwu/Magisk/LatestRelease/">https://mirrors.tuna.tsinghua.edu.cn/github-release/topjohnwu/Magisk/LatestRelease/</a></td></tr><tr><td>Motrix</td><td><a href="https://mirrors.sdu.edu.cn/github-release/agalwood_Motrix/">https://mirrors.sdu.edu.cn/github-release/agalwood_Motrix/</a></td><td></td><td></td></tr><tr><td>obs-studio</td><td>[<a href="https://mirrors.sdu.edu.cn/software/Windows/OBS%20Studio/]">https://mirrors.sdu.edu.cn/software/Windows/OBS%20Studio/]</a>(<a href="https://mirrors.sdu.edu.cn/software/Windows/OBS">https://mirrors.sdu.edu.cn/software/Windows/OBS</a> Studio&#x2F;)</td><td><a href="https://mirrors.nju.edu.cn/github-release/obsproject/obs-studio/LatestRelease/">https://mirrors.nju.edu.cn/github-release/obsproject/obs-studio/LatestRelease/</a></td><td><a href="https://mirrors.tuna.tsinghua.edu.cn/github-release/obsproject/obs-studio/LatestRelease/">https://mirrors.tuna.tsinghua.edu.cn/github-release/obsproject/obs-studio/LatestRelease/</a></td></tr><tr><td>office tool plus</td><td>[<a href="https://mirrors.sdu.edu.cn/software/Windows/Office%20Tool%20Plus/]">https://mirrors.sdu.edu.cn/software/Windows/Office%20Tool%20Plus/]</a>(<a href="https://mirrors.sdu.edu.cn/software/Windows/Office">https://mirrors.sdu.edu.cn/software/Windows/Office</a> Tool Plus&#x2F;)</td><td></td><td></td></tr><tr><td>picgo</td><td><a href="https://mirrors.sdu.edu.cn/github-release/Molunerfinn_PicGo/">https://mirrors.sdu.edu.cn/github-release/Molunerfinn_PicGo/</a></td><td></td><td></td></tr><tr><td>rufus</td><td><a href="https://mirrors.sdu.edu.cn/software/Windows/Rufus/">https://mirrors.sdu.edu.cn/software/Windows/Rufus/</a></td><td><a href="https://mirrors.nju.edu.cn/github-release/pbatard/rufus/LatestRelease/">https://mirrors.nju.edu.cn/github-release/pbatard/rufus/LatestRelease/</a></td><td></td></tr><tr><td>qBittorrent</td><td><a href="https://mirrors.sdu.edu.cn/software/Windows/qBittorrent/">https://mirrors.sdu.edu.cn/software/Windows/qBittorrent/</a></td><td></td><td></td></tr><tr><td>ventoy</td><td><a href="https://mirrors.sdu.edu.cn/github-release/ventoy_Ventoy/">https://mirrors.sdu.edu.cn/github-release/ventoy_Ventoy/</a></td><td><a href="https://mirrors.nju.edu.cn/github-release/ventoy/Ventoy/LatestRelease/">https://mirrors.nju.edu.cn/github-release/ventoy/Ventoy/LatestRelease/</a></td><td></td></tr><tr><td>virtualbox</td><td></td><td><a href="https://mirrors.nju.edu.cn/virtualbox/">https://mirrors.nju.edu.cn/virtualbox/</a></td><td><a href="https://mirrors.tuna.tsinghua.edu.cn/virtualbox/">https://mirrors.tuna.tsinghua.edu.cn/virtualbox/</a></td></tr><tr><td>vlc</td><td></td><td><a href="https://mirrors.nju.edu.cn/videolan-ftp/">https://mirrors.nju.edu.cn/videolan-ftp/</a></td><td><a href="https://mirrors.tuna.tsinghua.edu.cn/videolan-ftp/">https://mirrors.tuna.tsinghua.edu.cn/videolan-ftp/</a></td></tr><tr><td>winehq</td><td></td><td><a href="https://mirrors.nju.edu.cn/winehq/">https://mirrors.nju.edu.cn/winehq/</a></td><td><a href="https://mirrors.bfsu.edu.cn/winehq/">https://mirrors.bfsu.edu.cn/winehq/</a></td></tr><tr><td>wepe</td><td><a href="https://mirrors.sdu.edu.cn/software/Windows/WePE/">https://mirrors.sdu.edu.cn/software/Windows/WePE/</a></td><td></td><td></td></tr><tr><td>winscp</td><td><a href="https://mirrors.sdu.edu.cn/software/Windows/WinSCP/">https://mirrors.sdu.edu.cn/software/Windows/WinSCP/</a></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>别像ZZ一样提问</title>
    <link href="/2022/10/02/%E5%88%AB%E5%83%8FZZ%E4%B8%80%E6%A0%B7%E6%8F%90%E9%97%AE/"/>
    <url>/2022/10/02/%E5%88%AB%E5%83%8FZZ%E4%B8%80%E6%A0%B7%E6%8F%90%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="别像ZZ一样提问"><a href="#别像ZZ一样提问" class="headerlink" title="别像ZZ一样提问"></a>别像ZZ一样提问</h1><p>Stop-Ask-Questions-The-Stupid-Ways</p><h2 id="你真的准备好了吗？"><a href="#你真的准备好了吗？" class="headerlink" title="你真的准备好了吗？"></a>你真的准备好了吗？</h2><p><a href="https://cdn.staticaly.com/gh/Vincentule/image-hosting@master/you-are-not-prepared.1l9gihqxzd28.webp"><img src="https://cdn.staticaly.com/gh/Vincentule/image-hosting@master/you-are-not-prepared.1l9gihqxzd28.webp" alt="you-are-not-prepared.png"></a></p><h2 id="避免-xy-problem"><a href="#避免-xy-problem" class="headerlink" title="避免 xy-problem"></a>避免 xy-problem</h2><ul><li>参考地址: <a href="http://xyproblem.info/">http://xyproblem.info/</a></li></ul><p><code>XY Problem</code> 表示</p><ol><li>提问者想要解决 <strong>原问题 X</strong> ，且觉得解决了 <strong>引申问题 Y</strong> 就能解决 <strong>X</strong> 问题</li><li><del>提问者对外提出了解决 <strong>Y</strong> 的的请求</del></li><li>回答者帮助提问者解决 <strong>Y</strong> 问题。（浪费了回答者和提问者双方的时间）</li></ol><blockquote><figure class="highlight tp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tp">然而, 最终 <span class="hljs-keyword">Y</span> 问题可能并不是 <span class="hljs-keyword">X</span> 问题的一个合适的解决方法<br></code></pre></td></tr></table></figure></blockquote><p>因此， 提问者要避免创造这样的修罗场, 需要学会在问题之初就准确描述自己的根本问题。 </p><h2 id="提问前你必须需要知道的事情"><a href="#提问前你必须需要知道的事情" class="headerlink" title="提问前你必须需要知道的事情"></a>提问前你必须需要知道的事情</h2><ol><li>要知道， <code>Free</code> 的正确翻译是 <code>自由</code>，而非 <strong>免费</strong>。</li><li>要知道，愿意回答问题的人，都是 <strong>可爱</strong> 的人。</li><li>要知道，向帮助你的人 <code>付费</code> 是一个高尚的行为。即使回答你的人不是为了钱。</li><li>要知道，<code>花钱买时间是一个常识</code>。如果你不能认同，要么你钱包穷，要么你思想穷。</li><li>要知道，给对方发工资的不是你或者你老板。</li><li>要知道，提问的时候你才是 <strong>孙子</strong>，帮助你的人是 <strong>大爷</strong>。</li><li>要知道，不回答你的问题对其他人没有任何损失。</li><li>要知道，<code>准确描述一件事情</code>是一项基本生存技能。要学会 <a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md">《提问的智慧》</a></li><li>要知道，<code>搜索</code>是一项基本生存技能，学不会用 Google 的话，你可能真的不适合你所从事的行业。</li><li>要知道，<code>英文</code>是一项基本生存技能，不认识英文的话，你可能真的不适合你所从事的行业。</li></ol><h2 id="幼儿园的小朋友都知道要有礼貌"><a href="#幼儿园的小朋友都知道要有礼貌" class="headerlink" title="幼儿园的小朋友都知道要有礼貌"></a>幼儿园的小朋友都知道要有礼貌</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">请问<br>  <span class="hljs-string">...</span>问题描述<span class="hljs-string">...</span><br>谢谢<br></code></pre></td></tr></table></figure><h2 id="学会描述问题"><a href="#学会描述问题" class="headerlink" title="学会描述问题"></a>学会描述问题</h2><blockquote><p>向别人提问的时候，要学会正确的描述问题。 把对方当成你的老板，你在给他做报告。要用最精炼的文字和图片，向对方阐述明白一个事情的来龙去脉。</p></blockquote><blockquote><p><strong>要知道，你不是我追的妹子，我没有时间来猜你想要什么。</strong></p></blockquote><blockquote><p>记住，给别人的条件越多，你的问题解决越快。因为这不是解密游戏。</p></blockquote><ol><li>请问一个关于 <code>什么</code> 的问题。</li><li>我想要达到 <code>什么样</code> 效果，但是我这样做出现了 <code>什么样</code> 的问题。</li><li>报错日志是 <code>这样</code> 的。（要 <code>学会</code> 画关键字）</li><li>我尝试过 <code>什么</code> 方法来解决。</li><li>我尝试搜索过了 <code>什么</code> 关键字，在里面找到了 <code>这些 URL</code> 的回答，尝试了还是没有解决问题。</li><li>我用的是 <code>什么</code> 操作系统，版本号是多少。</li><li>我用的是 <code>什么</code> 软件，版本号是多少。</li><li>谢谢</li></ol><blockquote><p>千万别认为只有别人帮助你之后才需要说 <code>谢谢</code>。</p></blockquote><h3 id="学会什么时候贴图"><a href="#学会什么时候贴图" class="headerlink" title="学会什么时候贴图"></a>学会什么时候贴图</h3><p><a href="https://cdn.staticaly.com/gh/Vincentule/image-hosting@master/what-time-to-use-image.7ah44deoatxc.webp"><img src="https://cdn.staticaly.com/gh/Vincentule/image-hosting@master/what-time-to-use-image.7ah44deoatxc.webp" alt="what-time-to-use-image.png"></a></p><p>像这种，IM 自动转义表情，贴出来的问题全是表情。</p><h3 id="学会什么时候要圈出重点"><a href="#学会什么时候要圈出重点" class="headerlink" title="学会什么时候要圈出重点"></a>学会什么时候要圈出重点</h3><p>千万不要认为别人的频率和你是同步的，然后像这样扔出一张图一个表情就了事了。</p><p>在工作中， 你<code>@</code>的人可能会多问一句什么情况。 但是在 IM 聊天群里面，就没有这么好运气了。</p><p><a href="https://cdn.staticaly.com/gh/Vincentule/image-hosting@master/stupid_02-conversation.2vwkcq8w02io.webp"><img src="https://cdn.staticaly.com/gh/Vincentule/image-hosting@master/stupid_02-conversation.2vwkcq8w02io.webp" alt="stupid_02-conversation.2"></a></p><p>如下很难吗？</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs aspectj"><span class="hljs-meta">@xxx</span>，我这边访问不了 git 仓库。<br>环境是: (详细描述你的环境)<br></code></pre></td></tr></table></figure><h3 id="学会什么时候贴文字"><a href="#学会什么时候贴文字" class="headerlink" title="学会什么时候贴文字"></a>学会什么时候贴文字</h3><h2 id="什么是弱智一样的提问"><a href="#什么是弱智一样的提问" class="headerlink" title="什么是弱智一样的提问"></a>什么是弱智一样的提问</h2><p><a href="https://cdn.staticaly.com/gh/Vincentule/image-hosting@master/stupid_questions.43lj03418abk.webp"><img src="https://cdn.staticaly.com/gh/Vincentule/image-hosting@master/stupid_questions.43lj03418abk.webp" alt="stupid_questions.png"></a></p><h2 id="标准答案（雾"><a href="#标准答案（雾" class="headerlink" title="标准答案（雾"></a>标准答案（雾</h2><table><thead><tr><th>什么鬼？</th><th>咋回事？</th><th>怎么办？</th><th>救命啊！！</th></tr></thead><tbody><tr><td>自己 google</td><td>自己 google</td><td>自己 google</td><td>自己 google 了吗</td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows可以禁用的无用服务</title>
    <link href="/2022/10/02/Windows%E5%8F%AF%E4%BB%A5%E7%A6%81%E7%94%A8%E7%9A%84%E6%97%A0%E7%94%A8%E6%9C%8D%E5%8A%A1/"/>
    <url>/2022/10/02/Windows%E5%8F%AF%E4%BB%A5%E7%A6%81%E7%94%A8%E7%9A%84%E6%97%A0%E7%94%A8%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<p><strong>Application Layer Gateway Service</strong> 参考 <a href="https://link.zhihu.com/?target=http://www.winwin7.com/JC/11988.html">Win10 Application Layer Gateway Service服务有什么用</a></p><p><strong>Connected User Experiences and Telemetry</strong> 参考 <a href="https://link.zhihu.com/?target=http://www.winwin7.com/JC/11991.html">Win10 Connected User Experiences and Telemetry服务可以禁用吗</a></p><p><strong>Diagnostic Policy Service</strong> <a href="https://zhuanlan.zhihu.com/p/279282628/http://www.winwin7.com/JC/Win7JC-2562.html">Diagnostic Policy Service服务是什么</a>（若无替代不要禁用）</p><p><strong>Diagnostic Service Host</strong> 基本和<em>Diagnostic</em> Policy <em>Service</em>&#x2F;<em>Diagnostic</em> <em>Service</em> <em>Host</em>是同类,可以一起禁用</p><p><strong>Diagnostic System Host</strong> 同上</p><p><strong>Distributed Link Tracking Client</strong> 参考 <a href="https://link.zhihu.com/?target=http://www.winwin7.com/JC/11993.html">Distributed Link Tracking Client是什么服务</a></p><p><strong>Downloaded Maps Manager</strong> （供应用程序访问已下载地图的 Windows 服务。此服务由访问已下载地图的应用程序按需启动。禁用此服务将阻止应用访问地图。一般用户用不到）</p><p><strong>Function Discovery Provider Host</strong> （当电脑加入域后，共享文件需要的一个服务，非域则禁用，一般用户用不到）</p><p><strong>Internet Connection Sharing (ICS)</strong> （无线共享相关服务，如不需要无线共享，AP热点等可关闭）</p><p><strong>IPsec Policy Agent</strong> （防火墙相关，用来协商和配置IPSEC安全策略，一般用户用不上）</p><p><strong>Link-Layer Topology Discovery Mapper</strong> （网络映射相关，不使用可禁用）</p><p><strong>Microsoft App-V Client</strong> （应用程序虚拟化技术客户端，一般用不上，禁用）</p><p><strong>Microsoft iSCSI Initiator Service</strong> （iscsi远程连接服务，禁用）</p><p><strong>Net.Tcp Port Sharing Service</strong> （TCP端口共享服务，一般用户用不上）</p><p><strong>Offline Files</strong> 参考 <a href="http://www.winwin7.com/JC/Win7JC-2559.html">Offline Files是什么服务</a> (脱机服务，一般用不上）</p><p><strong>Performance Logs &amp; Alerts</strong> （搜集计算机性能、日志、报警信息的服务项）</p><p><strong>Portable Device Enumerator Service</strong> <a href="http://www.winwin7.com/JC/12009.html">Portable Device Enumerator Service服务有什么用</a></p><p><strong>Program Compatibility Assistant Service</strong> （Windows兼容性助理，处理程序兼容性，可关闭）</p><p><strong>Quality Windows Audio Video Experience</strong> 参考 <a href="http://www.winwin7.com/JC/12016.html">Quality Windows Audio Video Experience是什么服务</a></p><p><strong>Remote Desktop Configuration</strong> （远程桌面服务，可关）</p><p><strong>Remote Desktop Services</strong> （远程桌面服务，可关）</p><p><strong>Remote Desktop Services UserMode Port Redirector</strong> （远程桌面服务，可关）</p><p><strong>Remote Registry</strong> 参考 <a href="http://www.winwin7.com/JC/5990.html">Remote Registry是什么服务</a>（远程注册表服务，默认禁用。）</p><p><strong>Routing and Remote Access</strong> (软路由服务，可禁用)</p><p><strong>Secondary Logon</strong> （二次登录服务，建议禁用）</p><p><strong>Server</strong> （局域网共享相关服务，不使用局域网可以禁用 ）</p><p><strong>Shared PC Account Manager</strong> （共享PC帐户管理器，可以禁用）</p><p><strong>Shell Hardware Detection</strong> （提供自动播放事件通知，禁用）</p><p><strong>Smart Card</strong> （智能卡服务，禁用）</p><p><strong>Smart Card Device Enumeration Service</strong> （同上，还是服务于智能卡，禁用）</p><p><strong>Smart Card Removal Policy</strong> （智能卡相关服务）</p><p><strong>SSDP Discovery</strong> （发现网络上的UPnP设备，网络发现相关服务，不使用局域网可禁用）</p><p><strong>SysMain</strong> 参考 <a href="http://www.winwin7.com/JC/8083.html">SysMain是什么服务</a> (预读取服务 如配备高速固态禁用无影响）</p><p><strong>SynTPEnh Caller Service</strong> （同步电话呼叫服务 禁用）</p><p><strong>TCP&#x2F;IP NetBIOS Helper</strong> （局域网共享相关服务，不用可禁用）</p><p><strong>Telephony</strong> （电话应用程序编程接口 (TAPI) 提供支持 ，拨号用户不要关，否则禁用）</p><p><strong>User Experience Virtualization Service</strong> （用户体验虚拟化服务，不需要禁用）</p><p><strong>Windows Biometric Service</strong> （生物识别服务，不使用指纹、不使用人脸识别可以禁用）</p><p><strong>Windows Search</strong> （Windows搜索服务，加快搜索速度，无替代软件的情况下请勿禁用）</p><p><strong>Windows 推送通知系统服务</strong> （建议关闭，会狂占内存、CPU，但禁用有概率出现问题）</p><p><strong>WinHTTP Web Proxy Auto-Discovery Service</strong> （默认手动，可禁用）</p><p><strong>Workstation</strong> (局域网共享相关，不需要可禁用)</p><p><strong>Xbox Live 身份验证管理器</strong> （禁用）</p><p><strong>Xbox Live 游戏保存</strong> （禁用）</p><p><strong>XboxNetApiSvc</strong> （禁用）</p><p><strong>零售演示服务</strong> （用于演示模式，可禁用）</p><p><strong>自动时区更新程序</strong> （网络时间同步，不需要可禁用）</p>]]></content>
    
    
    
    <tags>
      
      <tag>技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ArchLinux安装教程（下）</title>
    <link href="/2022/10/02/ArchLinux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <url>/2022/10/02/ArchLinux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="魔法学园"><a href="#魔法学园" class="headerlink" title="魔法学园"></a>魔法学园</h2><blockquote><p><strong>访问互联网权认为所有人必须能够访问互联网，以行使和享受其言论自由、通信自由、见解自由以及其他基本人权。任何国家及地区不合理地限制个人对互联网的访问都是对基本人权的践踏。</strong></p></blockquote><p><strong>为了你的人身安全，不要在任何装有具有间谍性质的专有软件的设备上使用科学上网客户端。</strong>这些设备可以是手机，PC   等。在手机上,威权政府的监管机构可以轻易得到你所安装的应用列表，并可以通过各种手段关联并查询到你所做的事和发表的言论，并采取进一步控制，这是有先例的。理论上，在 PC 设备上也完全存在这种可能。如果你必须要使用微信，QQ 等具有间谍性质的专有软件，请在完全隔离的物理设备中使用。</p><p>本节描述如何在 Linux 下进行科学上网。本节是<strong>必读章节</strong>。如果没有配置好科学上网，那么你在日常使用中会遇到各种问题，不论是被封锁的资源或代码，还是查阅相关问题资料，你都会有可能无法下载和浏览。所有人<strong>必须</strong>配置好科学上网再继续。</p><h3 id="1-节点的准备"><a href="#1-节点的准备" class="headerlink" title="1.节点的准备"></a>1.节点的准备</h3><p>简单来讲节点是形如如下的神秘链接，不论你以何种方式获得的这些连接，如果你已经拥有，可以直接阅读下面一小节。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">ss:<span class="hljs-regexp">//</span>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<br>vmess:<span class="hljs-regexp">//</span>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<br></code></pre></td></tr></table></figure><p>如果你没有这些连接，可以自行部署或者购买机场的订阅服务。</p><p>如果自行部署，你则需要自行购买处于自由互联网的服务器并进行节点搭建，这不在本文讨论范围内，仅提供三篇 GFW Report 的高质量文章作为参考。但是这些文章已被 GFW 屏蔽。我们之后会提供一些办法解决这个问题。</p><ul><li><a href="https://gfw.report/blog/ss_tutorial/zh/">如何部署一台抗封锁的 Shadowsocks-libev 服务器</a></li><li><a href="https://gfw.report/blog/ss_advise/zh/">防御 GFW 主动探测的实用指南</a></li><li><a href="https://gfw.report/talks/imc20/zh/">Shadowsocks 是如何被检测和封锁的</a></li></ul><p>对于服务器的购买，我们提供一个网址以供参考: <a href="https://bitcoin-vps.com/">https://bitcoin-vps.com/</a> 。bitcoin-vps   提供了非常详尽、且及时更新的服务器供应商列表，这些服务器供应商均在不同程度上支持使用加密货币进行支付，如比特币、以太坊等等。使用加密货币支付的好处在于，在正确操作的基础上，你可以完全保障自己的隐私安全。使用支付宝等实名支付手段购买类似的服务是不安全的，我们希望读者们可以认识到加密货币在各方面的价值，并认识到加密货币可以作为你的隐私保护者的存在。</p><hr><p>如果购买机场的订阅服务，可以参考它们的订阅流程以获取节点。在我们列出一些较为可信的机场服务以供选择，但是<strong>我们不提供任何担保</strong>。需要提醒的是，机场服务属于灰色产业，随时有停止服务的可能，购买建议以月付进行购买以避免过大损失。对于机场审计程度，读者可根据自身实际情况自行评估。</p><ul><li><a href="https://www.bygcloud.com/">白月光</a> 新运营的机场，优点在于速度较为优秀，对流媒体解锁支持较为全面,机场主的售后服务迅速。对于其审计规则，可在注册账户后进入后台面板自行查看。据我们测试，其并没有严格按照审计规则进行审计。</li><li><a href="https://glados.rocks/">GLaDOS</a> 邮箱注册后使用激活码<code>9FMKX-GYLMK-ZYIZW-5U3T0</code>激活账户并获取免费时长。GLaDOS 的优势在于可以进行签到来免费使用，而且运营时间较长，较为可信。除此之外，GLaDOS 还是为数不多的拥有 Trojan   节点的机场。缺点在于速度并不算优秀。对于其审计规则，可在注册账户后进入后台面板自行查看。据我们测试，其并没有严格按照审计规则进行审计。</li></ul><hr><p>如果你不想花任何费用，可安装<a href="https://psiphon3.com/zh/index.html">赛风</a>这类软件。赛风是自由软件。</p><p>如果你使用赛风，可以非常方便的发送空邮件到<a href="mailto:get@psiphon3.com">get@psiphon3.com</a>以获取赛风下载链接。赛风应用目前只支持 Windows\Android\IOS\MacOS 平台。当你在这些平台上能够访问自由互联网时，可以去各个渠道搜索可用的节点和代理资源，如<a href="https://t.me/wtovpn">这个</a>或者<a href="https://t.me/TG_Mtproxy_1">这个</a>。注意，使用公共节点需要自行承担可能的风险。</p><h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h3><p>V2rayA 是款非常优秀的在 Linux 上可用的科学上网通用客户端。V2rayA  是一款浏览器客户端，它可以在服务器等 环境中通过远程在浏览器端访问。</p><h3 id="v2ray"><a href="#v2ray" class="headerlink" title="v2ray"></a>v2ray</h3><p>v2ray 是使用 Qv2ray 以及 V2rayA 的前提。需要先进行安装。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">sudo</span> pacman -S v2ray<br></code></pre></td></tr></table></figure><h3 id="V2rayA"><a href="#V2rayA" class="headerlink" title="V2rayA"></a>V2rayA</h3><p>V2rayA 是一个浏览器客户端，使用非常方便。由于作者提供了在墙内的下载地址，可以直接在 AUR 进行安装。安装后需启动服务。V2rayA 更新频繁，开发活跃，并且其安装和使用流程都对新手更加友好。</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs smali">paru -S v2raya-bin<br>sudo<span class="hljs-keyword"> system</span>ctl enable --now v2raya<br></code></pre></td></tr></table></figure><p>随后在菜单中搜索 v2raya，点击即可打开浏览器页面。登陆后在其中加入订阅即可使用。更多使用方法请看<a href="https://v2raya.org/">官方文档</a>与<a href="https://github.com/v2rayA/v2rayA">项目地址</a></p><h2 id="显卡驱动"><a href="#显卡驱动" class="headerlink" title="显卡驱动"></a>显卡驱动</h2><p>现在是 2022 年，显卡驱动的安装在 Arch Linux 上已经变得非常容易。本文区分核芯显卡和独立显卡两大类描述显卡驱动的安装。<strong>注意，确保你已经按照本教程之前的章节安装配置好科学上网、安装好必要的包后再向下进行，不要多个教程混着看，你可能漏掉了本教程前置步骤中的某些操作，从而造成问题。</strong></p><blockquote><p>所有 AMD 显卡建议使用开源驱动。英伟达显卡建议使用闭源驱动，因为逆向工程的开源驱动性能过于低下，本文也只描述英伟达闭源驱动安装。如果你支持自由软件运动，请尽可能使用具有官方支持开源驱动的英特尔和 AMD 显卡。</p></blockquote><h3 id="核芯显卡"><a href="#核芯显卡" class="headerlink" title="核芯显卡"></a>核芯显卡</h3><h4 id="英特尔核芯显卡"><a href="#英特尔核芯显卡" class="headerlink" title="英特尔核芯显卡"></a>英特尔核芯显卡</h4><p><a href="https://wiki.archlinux.org/index.php/Intel_graphics">官网文档</a></p><p>英特尔核芯显卡安装如下几个包即可。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">sudo pacman -S mesa lib32-mesa vulkan-<span class="hljs-built_in">int</span>el lib32-vulkan-<span class="hljs-built_in">int</span>el<br></code></pre></td></tr></table></figure><blockquote><p><code>xf86-video-intel</code>arch wiki 里写的很多发行版不建议安装它，而应使用 xorg 的 modesetting 驱动(也就是什么都不用装的意思)。经过我们测试目前确实是默认 modesetting 驱动较为稳定。</p></blockquote><p>注意，只有 Intel HD 4000 及以上的核显才支持 vulkan。</p><h4 id="AMD-核芯显卡"><a href="#AMD-核芯显卡" class="headerlink" title="AMD 核芯显卡"></a>AMD 核芯显卡</h4><p>对于具有核芯显卡的 AMD 处理器，需要先确定核显架构(Architecture)是什么，再决定安装什么驱动。推荐在 <a href="https://www.techpowerup.com/">techpowerup 网站</a>进行查询，信息非常全面。在确定了显卡架构后，再根据架构对照<a href="https://wiki.archlinux.org/index.php/Xorg#AMD">这个文档</a>决定安装什么驱动。<strong>对于 GCN2.0 及以下架构的老显卡，直接安装开源 ATI 驱动即可，原本闭源的老旧的 Catalyst 驱动在 2021   年已被废弃。GCN2.0 及以下架构的老显卡也不要使用开源的 AMDGPU   驱动，因为其仅处于实验性质，需要各种自定义内核编译选项与配置，非常麻烦，得不偿失。</strong>对于新型号，即 GCN3 架构及更新型的核芯显卡，直接安装开源驱动 AMDGPU 即可，也就是以下这几个包。</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sqf">sudo pacman -S mesa lib32-mesa xf86-video-amdgpu vulkan-radeon lib32-vulkan-radeon libva-mesa-<span class="hljs-built_in">driver</span> lib32-libva-mesa-<span class="hljs-built_in">driver</span> mesa-vdpau lib32-mesa-vdpau<br></code></pre></td></tr></table></figure><ul><li>比如你的笔记本 cpu 是目前常见的 AMD R7 4800U，那么它的核显为 Vega 8。通过查询，可知其为 GCN 5.0 架构，那么对照 arch 官方文档，你可选择安装 AMDGPU 开源驱动。</li><li>再比如你的台式机 cpu 是目前常见的 锐龙 5 3400G，那么它的核显为 Vega 11。通过查询，可知其为 GCN 5.0 架构，那么对照 arch 官方文档，你可选择安装 AMDGPU 开源驱动。</li><li>再老一些的 apu A10-9700 处理器 ，它的核显为 Radeon R7。通过查询，可知其为 GCN 2.0 架构，那么对照 arch 官方文档，你选择安装 ATI 开源驱动。</li></ul><h3 id="独立显卡"><a href="#独立显卡" class="headerlink" title="独立显卡"></a>独立显卡</h3><p>这部分会分为仅有独立显卡(无核显)与同时拥有独立显卡和核芯显卡两种情况进行讲解。</p><h4 id="英伟达独立显卡"><a href="#英伟达独立显卡" class="headerlink" title="英伟达独立显卡"></a>英伟达独立显卡</h4><p>较新型号的独立显卡直接安装如下几个包即可。<a href="https://wiki.archlinux.org/index.php/NVIDIA">官方文档</a></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">sudo</span> pacman -S nvidia nvidia-settings lib32-nvidia-utils <span class="hljs-comment">#必须安装</span><br></code></pre></td></tr></table></figure><p>如果是 GeForce 630 以上到 GeForce 920 以下的老卡，安装 <a href="https://aur.archlinux.org/packages/nvidia-470xx-dkms/">nvidia-470xx-dkms</a>AUR及其 32 位支持包。使用 dkms 驱动同时需要 headers。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">yay</span> -S nvidia-<span class="hljs-number">470</span>xx-dkms nvidia-settings lib32-nvidia-<span class="hljs-number">470</span>xx-utils linux-headers<br></code></pre></td></tr></table></figure><p>如果是 GeForce 630 以下到 GeForce 400 系列的老卡，安装 <a href="https://aur.archlinux.org/packages/nvidia-390xx-dkms/">nvidia-390xx-dkms</a>AUR及其 32 位支持包。使用 dkms 驱动同时需要 headers。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">yay</span> -S nvidia-<span class="hljs-number">390</span>xx-dkms nvidia-settings lib32-nvidia-<span class="hljs-number">390</span>xx-utils linux-headers<br></code></pre></td></tr></table></figure><p>再老的显卡直接使用<a href="https://wiki.archlinux.org/index.php/Nouveau">开源驱动</a>即可。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">sudo pacman -S mesa lib32-mesa xf86-<span class="hljs-selector-tag">video</span>-nouveau<br></code></pre></td></tr></table></figure><hr><p><strong>在同时拥有核芯显卡和英伟达独立显卡的笔记本上安装驱动是大多数人关注的事情，这里着重讲述。</strong></p><blockquote><p>再次提醒请按照本书前置章节配置好系统后再进行，不要多个教程混看，<strong>尤其是一些过时的教程</strong>。尤其需要注意的是确保 base-devel 包的安装以及配置好科学上网软件，以及使用 X11 模式。</p></blockquote><p><a href="https://wiki.archlinux.org/index.php/NVIDIA_Optimus">英伟达双显卡模式官方文档</a> &#x2F;&#x2F;&#x2F; <a href="https://github.com/Askannz/optimus-manager/wiki">optimus-manager 官方文档</a></p><p>若为同时拥有核芯显卡与英伟达独显的笔记本电脑，同样需要按照上述步骤先安装各个软件包。除此之外还需要安装  optimus-manager。可以在核芯显卡和独立显卡间轻松切换。optimus-manager 提供三种模式，分别为仅用独显，仅用核显，和  hybrid 动态切换模式。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yay -S optimus-manager optimus-manager-qt</span><br></code></pre></td></tr></table></figure><p>安装完成后重启即可使用。optimus-manager 安装完成后会默认 enable optimus-manager 的服务，你可在重启前检查其状态，若没有 enable 则手动将其   enable。重启后在菜单栏搜索 optimus-manager 点击即可使用。可在其设置中设置开机自动启动。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo systemctl <span class="hljs-built_in">enable</span> optimus-manager<br></code></pre></td></tr></table></figure><p>此时你应该已经可以进行显卡切换了，如果有问题，请详细阅读 optimus-manager 的文档，里面有详细的描述。由于各类问题太多，本文不进行描述，optimus-manager 的文档很详尽，请自行查看。此处仅列出几项较为重要的注意事项:</p><ul><li>如果需要在独显和核显模式间切换，要注意你没安装各类 GPU 监控插件，它们会阻止显卡切换，导致不可预料的错误。</li><li>不要使用 Nvidia Control Panel 中的<code>Save to X Configuration file</code>按钮。会导致配置冲突。</li><li>在显卡之间的切换时，重新登陆后如在 splash screen 卡住或者黑屏，可以尝试在 tty1 tty2 之间进行切换。</li><li>如果你在安装 optimus manager 并重启后，直接黑屏卡死，不能进入系统，很有可能是遇到了常见的”ACPI ISSUE”，简单来说，这是笔记本制造商的实现问题。可以尝试在内核启动参数中加入<code>acpi_osi=! acpi_osi=&quot;Windows 2009&quot;</code> 后再尝试。[<a href="https://github.com/Askannz/optimus-manager/wiki/FAQ,-common-issues,-troubleshooting#when-i-switch-gpus-my-system-completely-locks-up-i-cannot-even-switch-to-a-tty-with-ctrlaltfx">1]</a></li></ul><p>最后详细说下动态切换模式。本质上其还是使用官方的 <a href="https://wiki.archlinux.org/index.php/PRIME#PRIME_render_offload">PRIME</a>对闭源驱动的方法进行切换。需要设置三个环境变量，或者用 nvidia-prime 包提供的命令 prime-run，二者本质也是一样的，都是设置三个环境变量。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">sudo pacman -S nvidia-prime<br>prime-<span class="hljs-built_in">run</span> some_program <span class="hljs-comment">#使用prime-run前缀来用独显运行某些程序</span><br></code></pre></td></tr></table></figure><p>对于 AMD 核显+N 卡独显的读者，optimus-manager 对于这套组合的支持目前已经发布，最新可用版本为 1.4。</p><hr><p><strong>如果你不是强烈追求能效控制以及注重电池寿命的用户，那么可以不用往下看了，如果你是，那么需要针对你的硬件以及笔记本型号尝试正确的电源管理方式。此部分的设置可能导致黑屏，并且尝试过程可能较长，也会遇到各类问题，请根据你个人的操作水平自行斟酌是否操作</strong></p><p>电源控制做的事情是，在只用核显的模式下，确保正确关闭独立显卡。而在混合模式下，绝大多数情况下 Nvidia   模块实际是始终开启的，电源控制并不生效。这件事情其实很复杂，因为对于不同的显卡型号，以及笔记本型号的组合，可行的方案都是不同的。笼统来说，最广泛适用的办法是 bbswitch。但仍不建议上来就按照此方式安装使用，因为某些特定的硬件就是会出问题，也就是黑屏。这里建议按照 optimus-manager 官方的文档一步一步来，按步骤尝试，最后找到属于你自己的电脑合适的电源管理方式。<strong>此<a href="https://github.com/Askannz/optimus-manager/wiki/A-guide--to-power-management-options">文档</a>必须详细阅读！</strong></p><p>针对大多数笔记本适用的 Bbswitch,此处进行安装使用的讲解。首先安装包 bbswitch。若使用其它内核，则安装包 bbswitch-dkms。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">sudo pacman -S <span class="hljs-keyword">bbswitch </span><span class="hljs-comment">#安装 bbswitch 切换方式</span><br></code></pre></td></tr></table></figure><p>接下来右键点击 optimus-manager 的托盘设置，在 Optimus 选项卡中的 switch method 选择 Bbswitch 即可。</p><h4 id="AMD-独立显卡"><a href="#AMD-独立显卡" class="headerlink" title="AMD 独立显卡"></a>AMD 独立显卡</h4><p>AMD 独立显卡的驱动安装步骤实际上 AMD 核芯显卡是相同的，都需要先确定架构，然后选定正确的驱动安装即可。真正需要关注的是如何在核芯显卡和独立显卡间进行切换。可以使用 <a href="https://wiki.archlinux.org/title/PRIME#For_open_source_drivers_-_PRIME">PRIME</a> 对开源驱动的双显卡切换方式。</p><p>此外，可以使用 <code>glmark2</code>，<code>DRI_PRIME=1 glmark2</code> 分别对核显和独显进行测试，选择分数更高的一个进行使用。可以在 steam 游戏的启动前缀中加入<code>DRI_PRIME=1 mangohud %command%</code>来使用独显。(关于 <a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/#/play/software?id=%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7">mangohud</a>)。</p><p>笔记本上使用独立显卡运行 steam 游戏的另一个例子。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">DRI_PRIME=<span class="hljs-number">1</span> steam steam:<span class="hljs-regexp">//</span>rungameid/<span class="hljs-number">570</span> <span class="hljs-comment">#运行dota2</span><br>DRI_PRIME=<span class="hljs-number">1</span> steam steam:<span class="hljs-regexp">//</span>rungameid/<span class="hljs-number">730</span> <span class="hljs-comment">#运行cs go</span><br></code></pre></td></tr></table></figure><h2 id="娱乐和办公"><a href="#娱乐和办公" class="headerlink" title="娱乐和办公"></a>娱乐和办公</h2><h3 id="办公日常"><a href="#办公日常" class="headerlink" title="办公日常"></a>办公日常</h3><p>本章记录日常办公需要用到的软件及配置。同时包括各类即时通讯软件和网盘、远程协助等软件的配置与使用。</p><blockquote><p>QQ 与微信等中国国内知名闭源专有 IM 软件均存在不同程度的间谍行为(实际上不仅仅是 IM 软件，几乎所有你能见到的中国国内大型互联网  APP 均有严重的间谍行为，美其名曰:用户行为监测或用户画像描述)。收集用户信息，扫描用户手机存储内容，监控粘贴版内容，记录手机安装 APP  列表等无耻行为几乎已经成为业内公开的秘密。除了自身作恶，这类专有间谍软件还与威权政府狼狈为奸，迫害与追捕民运人士以及异议人士。同时，腾讯一直以来不遗余力的封杀第三方客户端，导致始终没有一个稳定可用的版本。腾讯于 2020 年出品了官方版本 LinuxQQ，其品质可以用惨不忍睹形容。<strong>我们不支持你使用 QQ 或微信这类专有间谍通讯软件作为你的主要通讯方式。本教程亦不提供任何支持。</strong></p></blockquote><blockquote><p>欧盟于近些年出台了<a href="https://en.wikipedia.org/wiki/General_Data_Protection_Regulation">GDPR 通用数据保护条例</a>，国内各大知名互联网软件公司在开发海外版软件时均需严格遵守上传数据、用户隐私等规定。然而在开发中国国内版时，则尽可能上传其能获取到的全部用户个人隐私数据，这是无耻且邪恶的。我们希望尽可能多的人抵制使用这种专有软件。</p></blockquote><blockquote><p>希望所有人抵制或放弃此类恶意专有软件是不现实的，如果你不能舍弃使用这些软件，我们只能希望你可以在一个较为安全的隔离环境中使用它们，如一个不存在任何敏感个人信息的隔离物理设备中使用。使用自由开源的，注重隐私保护的通讯软件始终是正确的选择。</p></blockquote><h4 id="即时通讯"><a href="#即时通讯" class="headerlink" title="即时通讯"></a>即时通讯</h4><p><strong>我们强烈建议你使用开源自由的通讯软件，这是为了你自身的自由，也是为了身边人的自由。</strong></p><h5 id="即时通讯软件的分类"><a href="#即时通讯软件的分类" class="headerlink" title="即时通讯软件的分类"></a>即时通讯软件的分类</h5><p>除了 p2p 的模式，即时通讯软件分为客户端软件与服务端软件。你应该选择开源的客户端软件来使用。而对于服务端，除非你打算自行部署服务器程序，否则讨论某个即时通讯软件的服务端是否开源毫无意义，因为永远也没有人知道被部署的是否是被声称的那一份代码。</p><p>除了自身是否是开源自由的软件外，即时通讯软件从其服务端部署的形式上，可以分为三类。</p><ul><li>第一类是完全中心化的通讯软件，这些软件的服务器被运营企业完全控制，并为用户提供服务。典型的例子有微信、QQ、Telegram、Signal 以及 Keybase 等。</li><li>第二类是分布式的，联邦式的通讯软件，这些软件的运营企业或组织一般会提供官方的服务器，但是同时支持任何人或组织自行部署服务器。同时这些服务器之间可以互相通讯。典型的例子如基于 Matrix 的通讯软件 Element。</li><li>第三类是完全去中心化，p2p  的通讯软件。这些软件基本无需任何服务器进行服务的提供(可能有少量的引导节点，但其除了引导不提供任何服务)，而是通讯双方直接和对方进行通讯沟通。这是一种最自由，但同时提供功能较为有限的模式。典型的例子如基于 Tox 协议的通讯软件 qTox。</li></ul><p>下面介绍一些我们较为推荐的通讯软件。</p><h5 id="Telegram"><a href="#Telegram" class="headerlink" title="Telegram"></a>Telegram</h5><p>Telegram，中文名一般称为电报，是一个在世界广泛应用的开源通讯软件，注重隐私保护和单人通讯加密。我们一向提醒读者不应该相信企业不作恶，但是某些极少数的企业在经过时间的检验后确实证明它们是较为值得信赖的，如 Lavabit 以及 Telegram。如过你没有进行极度敏感的活动，那么 Telegram 目前看来是值得信赖的。使用 Telegram  请不要使用+86 的中国境内电话号码注册，<strong>请务必使用虚拟电话注册</strong>，这是为了你的安全着想。如果你可以使用加密货币购买谷歌语音虚拟电话账户，可在<a href="https://t.me/FSF_Ministry_of_Truth">群组</a>中说明”我想购买谷歌语音账户”，会有我们的管理员与你私聊，协助完成你的购买。或者，你也可以直接联系我们的<a href="https://t.me/LI_Li_C">管理员</a>进行购买。注册完成后，需要在 Telegram 设置中的<code>Privacy and Security</code>中进行如下设置来保障你的隐私安全:</p><ul><li>Phone number 中的 Who can see my phone number 设置为 Nobody；</li><li>Phone number 中的 Who can find me by my number 设置为 My contacts；</li><li>把 Contacts 一节中的 Sync contact 关闭 (仅能在手机端操作);</li><li>把 Contacts 一节中的 Suggest Frequent Contacts 关闭 (仅能在手机端操作);</li><li>点击 Contacts 一节中的 Delete synced contacts，这样即使之前有联系人，也无法再次关联到你(仅能在手机端操作);</li></ul><blockquote><p>注意，上述的三个仅能在手机端操作，建议在 Arch Linux 中的安卓模拟器中完成。或者在一个纯净的，刷入开源可信的 ROM  的，并未安装任何中国的闭源间谍软件的手机上操作，这是因为如果你使用了中国手机厂商的闭源操作系统以及闭源间谍软件，它们是可以获取你安装  Telegram 的行为的，并有可能与威权政府合作对你进行进一步的监视甚至抓捕。</p></blockquote><p>通过以下命令在 Arch Linux 上安装 Telegram:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S telegram-desktop<br></code></pre></td></tr></table></figure><blockquote><p>任何技术始终都是双刃剑。Telegram 上进行恐怖活动和诈骗活动是事实，Telegram  官方也在进行持续封禁。但是不能因为这些原因就否定或质疑其存在的意义。Telegram  同时为处于威权和独裁国家中的异议人士与民运人士提供了可靠的平台进行通讯和活动。你一定不想成为这些独裁国家政府的帮凶。</p></blockquote><p>最后，如果你当前使用的设备非常敏感，那么需要在设置、高级中 关闭媒体自动下载。实际上，最安全的方式是在敏感设备上不安装使用 Telegram。</p><h5 id="Element"><a href="#Element" class="headerlink" title="Element"></a>Element</h5><p>Element 是一款基于开源 Matrix 协议的分布式、联邦式的即时通讯应用客户端。它所对应的服务端 synapse 同样是自由软件，你可以自行部署服务端程序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S element-desktop<br></code></pre></td></tr></table></figure><p>Element 相较于 Telegram  的最大优势是其服务端程序是开源自由的，并且可以自行部署。如果进行自行部署，这样可以保障你在与他人进行通讯时，不仅可以确定你使用的客户端是安全的，同时也能确定使用的服务端是安全的。除此之外，Element 支持群组聊天的端对端加密，这也是 Telegram 所不支持的。</p><p>由此可以看出，从部署的形势来看，Element 比  Telegram，在自行部署服务端的情况下可以获得更高强度的安全性。如果你从事极度敏感的线上活动，使用 Element 并自行部署  synapse 是比 Telegram 更好的选择。但是，在部署服务器程序的同时也要付出更多的精力与资金进行维护。</p><p>Element  官方也提供了官方的服务器 matrix.org  以供用户免费使用。如果其部署的服务确实是其宣称的那部分代码，那么这些服务器在端对端加密的情况下仅能获取一些用户的元数据。如上线时间以及交流对象等。如果自行部署服务器，这些元数据也将掌控在你自己手中。需要提醒的是，如果自行部署了服务器，还对于隐私安全要求程度很高，那么在自行部署的服务器上存在的端对端加密群组中的成员应该均在你自己的服务器上进行注册，在其他服务器，如 matrix.org  中注册的用户应该被禁止加入你自己的群组。因为如果他们加入，你自行部署的服务器上的群组中的元数据以及加密聊天数据会流转至其他服务器，这是一种危险。</p><h5 id="qTox"><a href="#qTox" class="headerlink" title="qTox"></a>qTox</h5><p>qTox 是一款基于 tox 协议制作的端对端加密即时通讯工具。除了 tox 的基本功能，qTox 还实现了离线消息发送的功能。tox  最初的想法就是创建一个即时通讯工具，无需使用中央服务器即可运行，并且点对点，端到端加密，保证用户通信的保密性和安全性。然而正是由于它的这种特性，qTox 提供的功能较为有限，如 qTox 中的群组，如果有人下线，那么他就无法接收到离线期间的群组信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S qtox<br></code></pre></td></tr></table></figure><p>qTox 在注册时会生成 Tox ID,这个 ID 用来添加好友，并且在此 ID 中存在注册时的用户 IP 信息，用来作为未来进行连接的一种方式。qTox 的连接方式如下，首先 qTox 会去连接一些<a href="https://nodes.tox.chat/">启动节点</a>，这些启动节点会获取你当前的 IP 并为你提供你想要通讯的对象的 IP。如果启动节点没有你想要通讯的对象的 IP，那么则会尝试使用对方 Tox ID 中的 IP  进行连接。如果均无法建连，则失败。qTox 在中国被屏蔽的原因可能是因为中国政府屏蔽了所有启动节点，同时由于大多数人没有稳定可达的公网  IP,所以导致在不翻墙时无法正确建连。</p><h5 id="IRC"><a href="#IRC" class="headerlink" title="IRC"></a>IRC</h5><p>IRC，因特网中继聊天，是一种古老的交流方式，在开源社区中仍被广泛使用，常用的客户端有 WeeChat，以及 Emacs 的 erc。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S weechat<br></code></pre></td></tr></table></figure><h5 id="屏幕分享"><a href="#屏幕分享" class="headerlink" title="屏幕分享"></a>屏幕分享</h5><p>除了上述软件，对于另外一些手机通讯软件在电脑上的投屏可以尝试使用<a href="https://archlinux.org/packages/community/x86_64/scrcpy/">scrcpy</a>。 也可以使用 <a href="https://archlinux.org/packages/extra/x86_64/kdeconnect/">KDE Connect</a> 在电脑上获取 Android 通知。</p><h4 id="办公套件"><a href="#办公套件" class="headerlink" title="办公套件"></a>办公套件</h4><p>主要两个选择是 <a href="https://wiki.archlinux.org/index.php/LibreOffice">LibreOffice</a>以及<a href="https://aur.archlinux.org/packages/onlyoffice-bin/">onlyoffice</a>)AUR。 我们建议你使用开源的 LibreOffice 以及 onlyoffice，而不是专有软件 WPS,前两者其目前的安装已经非常简单。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S libreoffice-still   <span class="hljs-comment">#稳定版</span><br>sudo pacman -S libreoffice-fresh   <span class="hljs-comment">#尝鲜版</span><br>yay -S onlyoffice-bin<br></code></pre></td></tr></table></figure><p>一些老式的 chm 文档的阅读，可以安装<code>kchmviewer</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S kchmviewer<br></code></pre></td></tr></table></figure><h4 id="打印机"><a href="#打印机" class="headerlink" title="打印机"></a>打印机</h4><p>对于日常办公来说，打印机是非常必要的。除此之外，我们建议读者维持一份纸质的密码，包括你可以将你加密货币钱包中的私钥打印出来保存，这是非常好的一个方案。对于打印机的品牌，我们建议使用惠普打印机。其对于 Linux 的支持非常全面，可以去其<a href="https://hplipopensource.com/">网站</a>查看所支持的设备等详情。在 Arch Linux 上，安装包 hplip 以及 cups ，启动服务后即可使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S hplip<br>sudo pacman -S cups<br>sudo systemctl <span class="hljs-built_in">enable</span> --now cups.service<br></code></pre></td></tr></table></figure><h4 id="笔记本"><a href="#笔记本" class="headerlink" title="笔记本"></a>笔记本</h4><p>Joplin 是一个简单的 markdown 笔记本，具有标签和层级等基础功能。并且具有 cli 和 desktop 两个版本。其 LICENSE 为 MIT 。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">yay -S <span class="hljs-keyword">joplin </span><span class="hljs-comment"># cli</span><br>yay -S <span class="hljs-keyword">joplin-desktop </span><span class="hljs-comment"># desktop</span><br></code></pre></td></tr></table></figure><p>Trilium 是一个开源的 electron  笔记软件，它支持 markdown 还有 evernote 格式的导入，并且支持 markdown 和 html  的导出格式。其本身具有标签、无限层级、关系图以及历史记录等功能，基于 CKEditor 所见即所得的 markdown  编辑器。并且支持在服务器上自己搭建。其 LICENSE 为 AGPL 3.0 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">yay -S trilium-<span class="hljs-built_in">bin</span><br>yay -S trilium-server-<span class="hljs-built_in">bin</span><br></code></pre></td></tr></table></figure><h4 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h4><p>pdf 可直接用浏览器打开，也可选用其他专用的阅读软件，如<a href="https://archlinux.org/packages/extra/x86_64/okular/">okular</a>或者<a href="https://archlinux.org/packages/community/x86_64/calibre/">calibre</a>。okular 在打开大型 epub 时会非常卡顿,并且图片模糊不清，<a href="https://archlinux.org/packages/community/x86_64/foliate/">Foliate</a> 是阅读 epub 的更佳选择。</p><h4 id="RSS-阅读器"><a href="#RSS-阅读器" class="headerlink" title="RSS 阅读器"></a>RSS 阅读器</h4><p>RSS 阅读器 newsflash 是 feedreader 的精神继承者，支持本地 RSS 源和 RSS API 的读取，由 Rust 写成。 目前 feedreader 已经不再维护。也可使用 liferea。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo pacman -S newsflash</span><br></code></pre></td></tr></table></figure><h4 id="文献管理"><a href="#文献管理" class="headerlink" title="文献管理"></a>文献管理</h4><p>JabRef 是 java 编写的并且与 LaTeX 协作较好的开源文献管理软件，可以与 vim, Emacs 协作，并通过 bib 格式管理文献。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yay -S jabref</span><br></code></pre></td></tr></table></figure><p>Zotero 是一个开源的，基于 Firefox 解决方案的应用，其可以通过 VSCode 插件和 vim 插件进行引用。beta 版本具有笔记和内置 PDF 阅读器功能。</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gauss">yay -S zotero<br>yay -S zotero-<span class="hljs-built_in">beta</span> <span class="hljs-meta">#具有笔记和内置 PDF 阅读器</span><br></code></pre></td></tr></table></figure><h4 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h4><p>推荐使用 flameshot 火焰截图</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo pacman -S flameshot</span><br></code></pre></td></tr></table></figure><p>快捷键的命令是<code>flameshot gui</code>，可在 KDE 设置中加入设置快捷键为你所熟悉的键位。或者尝试另一种流行的 KDE 出品的截图软件 <a href="https://archlinux.org/packages/extra/x86_64/spectacle/">spectacle</a></p><h4 id="下载存储"><a href="#下载存储" class="headerlink" title="下载存储"></a>下载存储</h4><blockquote><p>不要使用任何墙国国内的网盘存储你的个人数据，他们可以根据”相关条款与规定”，或者”自我阉割”的精神觉悟随意处置你的所有数据，在仔细阅读过他们的用户协议后，你会觉得毛骨悚然。墙国网盘只能用来存储无关紧要的垃圾数据。</p></blockquote><blockquote><p>不要使用迅雷、旋风等墙国类似软件。关于 BT 的原理及迅雷的恶行可参考文章<a href="https://zhuanlan.zhihu.com/p/87193566">为什么国内 BT 环境如此恶劣？</a></p></blockquote><ul><li><p>Mega</p><p>AUR</p><p> 新西兰注重隐私的老牌网盘，也可直接使用 </p><p>web 版本</p><blockquote><p>Mega 网盘也许存在一些争议，但是选择 Mega 还是选择一些和威权政府合作非常愉快的网盘，结论非常明显。</p></blockquote></li><li><p><a href="https://aur.archlinux.org/packages/onedrive-abraunegg/">onedrive</a>AUR 微软创办的网盘业务，linux 下存在一个命令行客户端</p></li><li><p><a href="https://aur.archlinux.org/packages/qbittorrent-enhanced/">qbittorrent-enhanced</a>AUR 老牌 BT 客户端增强版，支持填入 tracker 的 URL 网址进行拉取，配合<a href="https://github.com/XIU2/TrackersListCollection">TrackersListCollection 项目</a>使用更佳。</p></li></ul><h4 id="图片浏览"><a href="#图片浏览" class="headerlink" title="图片浏览"></a>图片浏览</h4><p>在桌面环境与必要应用一节中已经安装了 <a href="https://archlinux.org/packages/extra/x86_64/gwenview/">gwenview</a>，它基本可以满足日常看图的需求。如果另需快速看图软件，可以尝试以下软件。</p><ul><li><a href="https://www.archlinux.org/packages/extra/x86_64/feh/">feh</a></li><li><a href="https://www.archlinux.org/packages/community/x86_64/nomacs/">nomacs</a></li></ul><h4 id="常用系统组件"><a href="#常用系统组件" class="headerlink" title="常用系统组件"></a>常用系统组件</h4><p>日常办公中所需要用到的各类小工具有很多实现，其中 KDE 的套件中就有很多，可以自行查询，此处仅列出几个常用的例子。</p><ul><li><a href="https://archlinux.org/packages/extra/x86_64/kcalc/">Kcalc</a> 计算器</li><li><a href="https://archlinux.org/packages/extra/x86_64/kamoso/">Kamoso</a> 相机</li><li><a href="https://archlinux.org/packages/extra/x86_64/kamoso/">Cheese</a> 茄子相机</li><li><a href="https://archlinux.org/packages/extra/x86_64/ktimer/">KTimer</a> 倒计时执行器</li></ul><h4 id="远程协助"><a href="#远程协助" class="headerlink" title="远程协助"></a>远程协助</h4><p>如需连接 windows 远程机器，你可以使用开源的<a href="https://archlinux.org/packages/community/x86_64/freerdp/">freerdp</a>协议，配合开源实现<a href="https://wiki.archlinux.org/title/Xrdp">Xrdp</a>，或者<a href="https://wiki.archlinux.org/title/Rdesktop">Rdesktop</a>即可。</p><p>如需链接 Linux 服务器，大多数场景使用 ssh 即可。</p><p>如果以上解决方案不能满足你，那么可以尝试免费使用的专有软件<a href="https://aur.archlinux.org/packages/teamviewer/">teamviewer</a>，其完善的功能基本可以满足全部需求。需要注意安装后需按照提示启动服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> --now teamviewerd<br></code></pre></td></tr></table></figure><h3 id="视频影音"><a href="#视频影音" class="headerlink" title="视频影音"></a>视频影音</h3><p>本节记录在 arch linux 上观看影视，收听音乐等相关信息。</p><h4 id="在线听歌与音频播放器"><a href="#在线听歌与音频播放器" class="headerlink" title="在线听歌与音频播放器"></a>在线听歌与音频播放器</h4><p>网络音乐收听可以使用网易或腾讯出品的<a href="https://aur.archlinux.org/packages/netease-cloud-music/">网易云音乐</a>，<a href="https://aur.archlinux.org/packages/qqmusic-bin/">qq 音乐</a>，但它们都年久失修，或者质量惨不忍睹。显然这些大公司是不会愿意向 Linux 桌面投放精力的，我们更推荐你来使用维护更到位的自由软件。</p><p><a href="https://github.com/qier222/YesPlayMusic">yesplaymusic</a> 是一款全平台的开源听歌软件，颜值高、无社交功能，并且是全网资源整合，推荐使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yay -S yesplaymusic<br></code></pre></td></tr></table></figure><p><a href="https://github.com/listen1/listen1_desktop">listen1</a> 是一款老牌的听歌软件，功能完善，同样资源全网整合，推荐使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yay -S listen1-desktop-appimage<br></code></pre></td></tr></table></figure><p><a href="https://github.com/Rocket1184/electron-netease-cloud-music">Electron Netease Cloud Music</a> 是一款用 Electron 和 Vue 编写的网易云音乐 Linux 客户端，支持歌曲下载，这是它的优势，但是曲库没有前两款软件齐全。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S electron-netease-cloud-music<br></code></pre></td></tr></table></figure><p><a href="https://github.com/feeluown/FeelUOwn">FeelUOwn</a> 是一个符合 Unix 哲学的跨平台的音乐播放器，安装简单，新手友好，默认提供国内各音乐平台插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">yay -S feeluown<br><span class="hljs-comment"># 按需安装以下插件</span><br>yay -S feeluown-local feeluown-netease feeluown-qqmusic feeluown-kuwo<br></code></pre></td></tr></table></figure><h4 id="视频播放器"><a href="#视频播放器" class="headerlink" title="视频播放器"></a>视频播放器</h4><p>本地音视频播放一般使用 vlc 或 mpv</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S vlc <span class="hljs-comment">#VLC 播放器</span><br>sudo pacman -S mpv <span class="hljs-comment">#MPV 播放器</span><br></code></pre></td></tr></table></figure><p>除此之外，如果你想收看在线影视资源，<a href="https://aur.archlinux.org/packages/zy-player-bin/">zy-player</a>是一个很好的选择，它是一个跨平台视频资源播放器, 整合全网资源，可以播放一些电影。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ArchLinux安装教程（上）</title>
    <link href="/2022/10/02/ArchLinux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <url>/2022/10/02/ArchLinux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>无论从哪个角度看，Arch Linux 都不是一个新手友好型 Linux 发行版</strong>。无论你是因为什么原因选择安装 Arch Linux，我都希望你能够满足下条件：</p><ul><li>具有基本阅读理解水平，至少要能跟着教程来</li><li>掌握电脑基础使用，能够正常开关机</li><li>对电脑键盘键位和其按钮有基本了解</li><li>能够面对满屏的命令行输出保持基本冷静</li><li>具有基础的英语水平</li><li>有一定自主操作能力，能根据自己实际情况解决相应问题</li><li>出现突发情况，能够自行解决或者上网查阅相关资料</li></ul><p>必须说明的是，写一篇面向新手的教程本身就是一件非常令人苦恼的事情。我不能确定我眼中的常识是否是新手闻所未闻的新知识，我不能确定我习惯并自以为清晰明了的描述会不会让新手看的云里雾里。因此在教程中我尽可能侧重于讲解而不是一直单调地告诉你如何去做。同时，因为面向新手，教程也会尽量避免其他知识的扩展以减少新手的阅读压力。</p><p>当然，你可以另辟蹊径，通过一些特殊方法（如安装脚本）完成安装过程，但是这样无疑失去了 Arch Linux   安装的意义。这样做最直接的后果是，对于 Arch Linux   这种需要你自己维护的系统，如果你甚至没有自己动手完成你的系统安装过程，那么在系统出现问题的时候你多半无计可施只能重装系统了。</p><p>如果你是一个小白也不用太过担心，安装过程虽然是通过命令行一步一步操作，看似非常复杂繁琐。但是实际操作过程中你会发现，<strong>大多数情况下你并不需要理解每一个步骤的原因、每一行命令的意思</strong>。一般来说，<strong>安装过程也不会出现什么技术难点</strong>。</p><p>如果你有一定的 Linux 使用经验，根据本教程，你可以轻松完成 Arch Linux + Windows 双系统的安装，部分命令可以根据你的习惯或者需求改为其他命令，本教程仅供参照。</p><p>如果你并不是想安装双系统，只是单纯安装 Arch Linux 这一个系统，可以根据需求对教程进行改动（教程步骤中也会进行说明）。</p><p>我更希望的是，新人们能通过我这篇教程更多地了解 Arch Linux 和 Linux 本身，而不是机械式和目的性地完成一个操作系统的安装。</p><h3 id="为什么使用-Linux？"><a href="#为什么使用-Linux？" class="headerlink" title="为什么使用 Linux？"></a>为什么使用 Linux？</h3><p>简单来说，现在世界上流行的 PC 操作系统有三个，Windows，Linux 与 macOS。</p><p>如果你是计算机相关专业的学生或者从业者，非常建议你使用 Linux 作为自己的日常系统。在使用 Linux   系统的过程中，可以无形中接触到各个方面的计算机知识，并且在未来的工作中也会为你带来相关方面的优势。 macOS 在一些方面（即大致为 BSD 与 GNU&#x2F;Linux 各方面的区别 )与 Linux 的操作并不同，并且由于其封闭的特性，我们不建议使用。Windows   在很多编程环境的配制过程中异常痛苦，且会出现各种各样的问题，强烈不建议使用 Windows 进行编程(除非你学的就是 Windows   系统编程)。</p><p>更重要的是，GNU&#x2F;Linux 是自由软件运动的相关重要产物。<a href="https://zh.wikipedia.org/wiki/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6%E8%BF%90%E5%8A%A8">自由软件运动(free software movement)</a>拒绝专有软件并推广自由软件,它的终极目标在于解放网络世界中的每个人——即每个电脑用户。每个人都应拥有完全掌控所运行软件的权利。<a href="https://www.gnu.org/philosophy/free-sw.zh-cn.html">自由软件</a>有如下四项原则：</p><ul><li>自由度 0：无论用户出于何种目的，必须可以按照用户意愿，自由地运行该软件。</li><li>自由度 1：用户可以自由地学习并修改该软件，以此来帮助用户完成用户自己的计算。作为前提，用户必须可以访问到该软件的源代码。</li><li>自由度 2：用户可以自由地分发该软件的拷贝，这样就可以助人。</li><li>自由度 3：用户可以自由地分发该软件修改后的拷贝。借此，用户可以把改进后的软件分享给整个社区令他人也从中受益。作为前提，用户必须可以访问到该软件的源代码。</li></ul><p>如果你只是一个普通用户，你一定见识过没有经过你的授权，电脑被装上了成堆的流氓软件的类似经历。专有软件不仅在各个维度强奸着用户，更包含着难以想象的恶意功能。用户的数据，隐私等重要信息会轻而易举被大公司们收集走，并加以滥用，这成为业内公开的秘密已是不争的事实。在专用软件有同类的自由软件替代时，强烈建议你迁移至自由软件。本书会同时记录专有软件与自由软件，因为如果完全摒弃专有软件，一定会直接将很多人阻挡在 linux 之外，这不是我们所希望的，我们希望先将更多人接纳到 GNU&#x2F;Linux   中，至少这是踏出的第一步。但这并不代表我们支持使用专有软件，我们希望你至少可以先踏入   linux，逐渐使用自由软件替代专有软件。专有软件在本书中仅作简要记录，不会详细描述，因为我们不希望你长期依赖于它。只要某个专有软件有足够优秀的自由软件替代品出现，我们就会移除本教程中的那个专有软件。专有软件在本书中会被角标专有或描述额外标记。如果你是有能力的开发者，更希望你可以开发出替代某些专有软件的自由软件。</p><p>最后，如果你想尝试完全免费的系统，或是喜欢探索充满新鲜与挑战的事物，Linux 也是你不可错过的体验。</p><h3 id="确定电脑的启动类型"><a href="#确定电脑的启动类型" class="headerlink" title="确定电脑的启动类型"></a>确定电脑的启动类型</h3><p>电脑启动类型可以粗略地分为「传统 BIOS」（简称 BIOS）和「UEFI」。因为两者在启动盘制作上和安装步骤上存在差异，所以必须在安装前对电脑的启动类型进行确认。如果是最近十年生产的设备，使用的一般是 UEFI 引导。</p><p>首先启动进入 Windows 桌面，同时按下 Win+R 打开运行对话框，然后输入 <code>msinfo32</code> 后回车确认打开系统信息，查看「BIOS 模式」是不是 UEFI。如果是，则为 UEFI 引导，反之则为传统 BIOS 引导。</p><h3 id="ISO-镜像烧录"><a href="#ISO-镜像烧录" class="headerlink" title="ISO 镜像烧录"></a>ISO 镜像烧录</h3><ul><li>Windows 建议使用 <a href="http://rufus.akeo.ie/downloads/">Rufus</a> 烧录镜像。</li></ul><blockquote><p>Rufus 是一个可以帮助格式化和创建可引导USB闪存盘的工具，比如 USB 随身碟，记忆棒等等。麻雀虽小，五脏俱全，体积虽小，功能全面。</p></blockquote><blockquote><p>注意，在某些 Linux 可用的软碟通(UItraISO)<strong>不适用于</strong> Arch Linux</p></blockquote><ol><li><p>下载完成后，双击打开该文件，允许或不允许 Rufus 联网检查程序更新皆可。</p><p><a href="https://blog.linioi.com/posts/18/6d1d86f6e363c.png"><img src="https://blog.linioi.com/posts/18/6d1d86f6e363c.png" alt="检查更新"></a></p></li><li><p>插入你的 U 盘，在「设备」选项框中选择你的 U 盘（一般会默认选中，以下图片均为示例）。</p></li><li><p>在「引导类型选择」下选择 「镜像文件（请选择）」，然后单击右侧的「选择」来选择你下载好的镜像。</p></li><li><p>「持久分区大小」默认即可。对于「分区类型」，UEFI 引导选择「GPT」，BIOS 引导保持「MBR」即可</p><p><a href="https://blog.linioi.com/posts/18/69aa1ec442d7a.png"><img src="https://blog.linioi.com/posts/18/69aa1ec442d7a.png" alt="示例"></a></p></li><li><p>「格式化选项」保持默认即可，单击开始来进行下一步。</p><p><a href="https://blog.linioi.com/posts/18/5377133faa985.png"><img src="https://blog.linioi.com/posts/18/5377133faa985.png" alt="示例"></a></p></li><li><p>选择 「以 ISO 镜像 模式写入（推荐）」，单击「OK」进行下一步。</p><p><a href="https://blog.linioi.com/posts/18/ea1b166c824e3.png"><img src="https://blog.linioi.com/posts/18/ea1b166c824e3.png" alt="img"></a></p></li><li><p>单击开始来烧录镜像。</p><p><a href="https://blog.linioi.com/posts/18/b3191015dc98e.png"><img src="https://blog.linioi.com/posts/18/b3191015dc98e.png" alt="示例"></a></p></li><li><p>等待烧录完成即可。（下图即为烧录完成的一个示例）</p><p><a href="https://blog.linioi.com/posts/18/7b7db13921e76.png"><img src="https://blog.linioi.com/posts/18/7b7db13921e76.png" alt="示例"></a></p></li></ol><ul><li>Linux 使用 dd 命令 ：</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">dd <span class="hljs-attribute">if</span>=ISO镜像位置 <span class="hljs-attribute">of</span>=/dev/sdX <span class="hljs-attribute">bs</span>=4M<br></code></pre></td></tr></table></figure><p><code>/dev/sdX </code>为用作启动盘的 U 盘标识。</p><p>输入如下命令确定获取电脑硬盘信息，所获取的信息中应该包含 U 盘标识 <code>sudo fdisk -l</code></p><h3 id="启动前准备工作"><a href="#启动前准备工作" class="headerlink" title="启动前准备工作"></a>启动前准备工作</h3><h4 id="为-Arch-Linux-准备空闲的硬盘空间"><a href="#为-Arch-Linux-准备空闲的硬盘空间" class="headerlink" title="为 Arch Linux 准备空闲的硬盘空间"></a>为 Arch Linux 准备空闲的硬盘空间</h4><p>首先打开电脑启动到 Windows。这里我们使用「磁盘管理」来为 Arch Linux 准备一个可用的磁盘空间用以安装。如果你只打算安装 Arch Linux 单系统则可以跳过这步。</p><ul><li>对于 Windows 7 及以上的 Windows 设备，可以右键「此电脑」(或「我的电脑」及其他可能被你自定义的名字)，然后选择「管理」—「磁盘管理」。</li><li>对于 Windows 8 及以上的 Windows 设备，可以直接 Win+X 后选择磁盘管理。</li></ul><p>这个界面显示的是你电脑上安装的所有存储设备的情况。</p><p><em>不止是电脑的硬盘</em>，其余如光驱和 U 盘（如果已经插入）也会在此处显示。</p><p><a href="https://blog.linioi.com/posts/18/7fe58c1243b16.png"><img src="https://blog.linioi.com/posts/18/7fe58c1243b16.png" alt="示例"></a></p><p>一般情况下，在该界面中，深蓝色的分区是主分区，浅蓝色的分区是扩展分区，绿色的是空闲没有使用的空间。我们现在要做的是选择一个剩余空间足够大的分区，空出来给我们的 Arch Linux 使用。</p><p><em>以下分为两种情况处理</em></p><ul><li>如果分区空间不是特别充裕，建议把最后一个分区空出来，即把该分区的数据全部备份到其他电脑分区然后把空出来的分区删掉。 注意，<strong>是删掉整个分区，不是格式化！！</strong>   虽然说选择其中的任意一个对安装本身没有影响，但是删除分区和格式化分区在后续操作上会有所不同。除非你清楚你在做什么并且知道后续的操作方法，否则请选择删除分区。   删除分区的方法是，右键你要删除的分区，然后点击“删除卷”再确认。注意，该操作会擦除该分区的所有数据，而且过程不可逆。操作完成后该分区就会变成成绿色的“可用空间”。这就是为 Arch Linux 准备好的空间。</li><li>如果你的 Windows 下的分区空闲空间足够大，则可以从空闲空间里压缩一部分空间来安装 Arch Linux。   步骤是，先在磁盘管理器（上图界面）中该分区上点右键，然后点“压缩卷”，Windows 会让你输入一个数值。这个数值是以 MB   为单位，输入的是你要分割出来的空间大小。这个数值最大不能超过该分区的空闲空间大小。   最后点击确定，接着会有一个整理数据和分割的过程，等它整理完“空闲空间”出现就完成了。</li></ul><blockquote><p>友情提醒：<strong>不同分区压缩出来的空闲空间不会合并在一起给你用。所以，不要想着从每个分区里拿一个空间出来凑足需要的空闲空间。</strong></p></blockquote><p>关于这个空间的大小，我认为对于初步的接触和学习来说，至少要 30G 以上，50G 为基准线。如果小于 30G 但是在 20G 以上，安装当然没有问题，不过<em>基本上没有空间给用户存储数据使用了</em>。</p><h4 id="禁用快速启动和安全启动"><a href="#禁用快速启动和安全启动" class="headerlink" title="禁用快速启动和安全启动"></a>禁用快速启动和安全启动</h4><p>Arch Linux 单系统安装可以不禁用 Windows 的快速启动但一定要禁用安全启动。</p><p>该部分建议自行在网上寻找相关教程。一部分原因是因为不同系统版本存在差异不方便统一概括，一部分是因为不同电脑可能存在不同的设置方式（比如进 BIOS），因此最好的办法是在网上找到自己机型对应的教程。</p><h4 id="设置-Windows-时区偏移"><a href="#设置-Windows-时区偏移" class="headerlink" title="设置 Windows 时区偏移"></a>设置 Windows 时区偏移</h4><p>Arch Linux 单系统安装可以跳过这步。</p><p>Linux 和 Windows 对硬件时钟的处理方式不同，如果不加以特别设置容易造成两个系统时间混乱。</p><p>Arch Wiki 及我个人推荐的方法是设置 Windows 时区偏移。</p><p>Windows 下使用管理员权限执行下列命令即可。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">reg <span class="hljs-keyword">add</span><span class="language-bash"> <span class="hljs-string">&quot;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\TimeZoneInformation&quot;</span> /v RealTimeIsUniversal /d 1 /t REG_DWORD /f</span><br></code></pre></td></tr></table></figure><h3 id="电脑环境确认"><a href="#电脑环境确认" class="headerlink" title="电脑环境确认"></a>电脑环境确认</h3><p>进行到这一步时，我们默认你电脑目前处于以下环境中的某一种。</p><ul><li>电脑使用传统 BIOS 引导+MBR 分区，且电脑已经安装一个运行正常的 Windows。电脑无与 Arch Linux 安装有关的硬件问题。</li><li>电脑使用 UEFI 引导+ GPT 分区，且电脑已经安装一个运行正常的 Windows。电脑无与 Arch Linux 安装有关的硬件问题。</li></ul><h3 id="启动盘使用"><a href="#启动盘使用" class="headerlink" title="启动盘使用"></a>启动盘使用</h3><p>首先让电脑从 U 盘启动。</p><blockquote><p>你问怎么从 U 盘启动？？我建议你点击此<a href="https://www.baidu.com/">链接</a>获取帮助</p><p>大多数的电脑都有一个在开机时按下一个按键来选择从哪里启动的选项（例如 Dell 和 Lenovo 是 F12，台式机是 Delete）。</p></blockquote><p>如果你的电脑旧到不支持从 U 盘启动…… 建议还是换台电脑吧……</p><p>从U盘启动后电脑会出现一个新界面，传统BIOS启动和UEFI启动在该界面显示结果不一样。</p><p>BIOS 启动界面：</p><p><a href="https://blog.linioi.com/posts/18/4cda84d1a6d0c.png"><img src="https://blog.linioi.com/posts/18/4cda84d1a6d0c.png" alt="BIOS"></a></p><p> UEFI 启动界面：</p><p><a href="https://blog.linioi.com/posts/18/303179878abc6.png"><img src="https://blog.linioi.com/posts/18/303179878abc6.png" alt="UEFI"></a></p><p>无论你是哪种启动，用光标选中第一项然后回车即可启动镜像。 启动成功后你应该在一连串的信息后看到类似如图所示界面： <a href="https://blog.linioi.com/posts/18/bf76fecd4806a.png"><img src="https://blog.linioi.com/posts/18/bf76fecd4806a.png" alt="示例"></a></p><blockquote><p>如果未出现该提示符，则可能是启动盘出现了问题，建议重新烧录镜像…</p></blockquote><p>先简单地对这个界面进行介绍，以减少后面重复累赘</p><p>首先，绝大多数操作系统都是多用户操作系统。多用户操作系统，顾名思义，一个操作系统上可以存在多个相对独立的用户帐号，就像 QQ 可以同时登录多个 QQ 号。</p><p>为了区分不同的用户，我们需要给不同的用户一个用户名以对他们进行区分。比如，如果已经存在一个用户他叫 Vincent，则不能存在另一个也叫 Vincent 的用户。</p><p>Linux中有一个管理员（Admin）账户作为这个系统的超级用户。管理员账户享有系统内至高无上的权限，他拥有一个特殊且唯一的用户名：root。</p><p>Windows的管理员账户默认名称为Administrator，<em>需要注意的是，Windows的管理员账户并不是拥有对系统的完全控制权。</em></p><p>就像用户有自己的用户名，电脑或者说主机（host）也有自己的主机名（hostname）。考虑到一个操作系统一般不会同时运行在多个设备上，所以主机名一般是给系统和程序看的，你无需特别关心。你可以自定义你电脑的主机名。</p><p>言归正传。经过上面简单解释，我们可以对如下的提示符进行科学的解释。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">root<span class="hljs-symbol">@archiso</span> ~ <span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><p>提示符 @ 前的 root 是当前用户的用户名，@ 后的 archiso 是当前系统（Arch Linux 启动盘）的主机名，～  符号代表你当前所处的目录，# 代表当前用户为管理员用户（普通用户为 $），#  后面输入的命令将会以管理员权限无条件执行。</p><p>特别说明，并非终端一定有这个提示符，也不是说提示符一定按照这个格式存在，因为这些都是可以由你自定义的。</p><p>你需要在这个称之为终端的界面输入你的命令完成安装过程，命令输入后必须回车确认，系统才会执行。</p><p>终端的命令需要精确到字符的大小写以及空格。除非你有进行特别配置，否则终端并不能智能地识别你的输入错误。所以，当你终端报错时，第一时间该做的就是检查是否打错了字符或者少了空格。</p><p>终端有个特别强大且实用的功能是 Tab 键补全。比如当你需要输入 <code>pacstrap</code>，你可以只输入 <code>pacs</code> 然后按一次键盘的 Tab 键，终端会自动补全 <code>pacstrap</code>。当存在多个可能的补全项，比如你只输入一个 s 就按下了 Tab 键，终端无法做到自动补全，这时它可能会列出所有可能的选项或者报错。当然，就像上面一样，这也可以由你自定义。善用 Tab 补全能极高地提高我们的输入效率。</p><p>我们通过下面一行简单的命令认识一下终端的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf /*<br></code></pre></td></tr></table></figure><p><code>rm</code> 是英语单词 remove（移除）的简写，在 Linux 下通常指<strong>删除文件</strong>；短横线 <code>-</code> 后是该命令的参数，<code>r</code> 代表递归，<code>f</code> 代表强制执行；最后的 <code>/</code> 代表根目录，<code>/</code> 后加 <code>*</code> 是一种常见的匹配方法，代表 &#x2F; 目录下所有文件的和文件夹。</p><p>所以，根据上面的解释，我们现在可以理解，上面那行命令的意思是，删除 &#x2F; 目录下所有文件和文件夹。空格将命令 <code>rm</code> 与参数 <code>-rf</code> 隔开，如果不隔开，终端会识别你输入的命令为 <code>rm-rf</code>。显然，这个命令不存在，所以终端会报错。</p><h3 id="连接网络并同步时间"><a href="#连接网络并同步时间" class="headerlink" title="连接网络并同步时间"></a>连接网络并同步时间</h3><ul><li>如果你能连接有线网络，最好的办法是直接插网线连接网络。</li><li>如果你电脑有无线网卡的话，则尝试通过 WiFi 连接。我们可以通过 archiso 内置的 iwd 软件完成这一过程。</li></ul><p>在使用 iwctl 之前，我们需要先检查一下你的网卡是否被物理禁用或软件禁用。</p><p>物理禁用一般需要你的电脑存在可以物理按键或滑块可以手动关闭或打开网卡（当然，一般电脑是没有这玩意的）。</p><p>软件禁用则考虑网卡是否被 rfkill 禁用，目前已知 ideapad（联想小新系列）会自动禁用无线网卡和蓝牙。</p><p>对于无线网卡被 rfkill 禁用的用户，输入以下命令解除 block</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">rfkill unblock <span class="hljs-keyword">all</span><br></code></pre></td></tr></table></figure><p>在确认无误后，输入 <code>iwctl</code> 进入 iwd 的 shell。</p><p>输入 <code>device list</code> 列出你电脑的无线网络设备（一般就是你电脑的网卡）</p><p>常见的网卡名称是 <code>wlan0</code> 这样的。请根据自己电脑的实际情况判断（如果看不懂上一个命令的输出可以用 <code>wlan0</code> 这个名字试试）。</p><p>输入如下命令列出所有网络，命令中的 <code>device</code> 需要替换为你上一步看到的网卡的名称</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs q">station device <span class="hljs-built_in">scan</span><br>station device <span class="hljs-built_in">get</span>-networks<br></code></pre></td></tr></table></figure><p>比如，如果你的网卡名称是 <code>wlan0</code>，那么你应该输入的命令是</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs q">station wlan0 <span class="hljs-built_in">scan</span><br>station wlan0 <span class="hljs-built_in">get</span>-networks<br></code></pre></td></tr></table></figure><p>如果你的电脑无线网卡工作正常的话，此时屏幕上会列出你熟悉的 WiFi 名称。如果没有任何结果或者出现报错的话，则需要你自己检查是否是网卡出现问题或者你打错了某个字符或者少了空格。</p><p>输入如下命令连接 WiFi，就像上面一样，<code>device</code> 需要替换成你电脑网卡的名字，<code>SSID</code> 需要替换成你想要连接且上面已经列出的 WiFi 名称</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">station device connect SSID<br></code></pre></td></tr></table></figure><p>如果 WiFi 有密码，此时会提示你输入密码，输入 WiFi 密码后回车即可。</p><p>完成上述操作后，输入 <code>exit</code> 退出 iwd 的 shell。</p><p>为了检测电脑真的是否连接上网络，我们可以在等待一段时间后输入如下命令</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-built_in">ping</span> www.baidu.com<br></code></pre></td></tr></table></figure><p>如果已连接上网络，则电脑会输出一大堆延迟测试数据。反之则只有简单的<code>Timeout</code>报错或长时间无输出结果。</p><p>此时按 <code>Ctrl+C</code> 以中止输出。</p><p><code>Ctrl+C</code> 的意思是同时按住 Ctrl 键和 C 键。在 Linux 终端下，<code>Ctrl+C</code> 可以近似理解为强行终止当前终端的活动进程。比如上面，ping 这个进程正在运行，我们通过 <code>Ctrl+C</code> 将它强行终止。</p><p>输入如下命令设置时间为 UTC 并完成 NTP 时间同步。</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hwclock</span> <span class="hljs-built_in">--systohc</span> <span class="hljs-built_in">--utc</span><br><span class="hljs-string">timedatectl</span> <span class="hljs-built_in">set-ntp</span> <span class="hljs-string">true</span><br></code></pre></td></tr></table></figure><h2 id="准备硬盘分区"><a href="#准备硬盘分区" class="headerlink" title="准备硬盘分区"></a>准备硬盘分区</h2><blockquote><p>对于双系统而言，最麻烦的一部分无疑就是硬盘分区和双系统引导。完成这部分需要读者拥有发育健全的大脑并且有一定的自主操作能力。</p></blockquote><p>你需要先输入<code>fdisk -l</code>查看当前电脑硬盘的状态。</p><p>输出结果中的 &#x2F;dev&#x2F;sdX 代表的是你电脑的硬盘。</p><blockquote><p>（<em>输出结果不可能真的出现<code>/dev/sdX</code>，此处的 X 只是代表如 a、b、c 这样的符号，如数学中用字母代替数的作用</em>）</p></blockquote><blockquote><p>如果你的电脑只有一个硬盘，你的输出结果应该仅含 <code>/dev/sda</code>和<code>/dev/sdb</code>。</p><p>其中，<code>/dev/sda</code> 代表的是你电脑的硬盘，<code>/dev/sdb </code>代表的是你的启动盘（U 盘）。</p><p><code>/dev/sda</code> 后的数字，如<code>/dev/sda1</code>，则代表<code>/dev/sda</code> 这个磁盘下的第几个分区。<em>注意，分区操作是针对硬盘而不是分区 在下一步的操作中 不要输入类似 cfdisk &#x2F;dev&#x2F;sda1 之类的命令</em></p><p>如果这是一块新硬盘或者已经清空的硬盘的话，你大概看不到 <code>/dev/sda1 </code>这样的分区。</p></blockquote><blockquote><p>如果你看到了一些其它的东西，比如<code>/dev/nvme0n1</code> 这样的，则代表你的电脑上有一块 NVMe SSD，此时应该对这块硬盘进行操作</p><p>如果是<code>/dev/mmcblk0</code> 这样的，则代表你的电脑上有 eMMC 存储。</p><p>此时你的启动盘可能会被归为 <code>/dev/sda </code>，所以<strong>下面要根据你自己实际情况操作</strong></p></blockquote><h2 id="对硬盘进行分区"><a href="#对硬盘进行分区" class="headerlink" title="对硬盘进行分区"></a>对硬盘进行分区</h2><p>在终端输入如下命令进行分区： <code>cfdisk /dev/sdX</code></p><p><strong>最后一次提醒，<code>/dev/sdX</code> 只是示例，具体命令需要根据你实际情况进行更改，比如<code>cfdisk /dev/sda</code>、<code>cfdisk /dev/nvme0n1</code> 这样的。</strong></p><p>此时屏幕应该显示你电脑相应的系统硬盘的信息。 同时，屏幕底部会显示几个［xxx］，其中有</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[ Delete ]</span> <span class="hljs-selector-attr">[ New ]</span> <span class="hljs-selector-attr">[ Quit ]</span> <span class="hljs-selector-attr">[ Help ]</span> <span class="hljs-selector-attr">[ Write ]</span> <span class="hljs-selector-attr">[ Dump ]</span><br></code></pre></td></tr></table></figure><p>这几个［xxx］的意思分别是</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[删除]</span> <span class="hljs-selector-attr">[新建]</span> <span class="hljs-selector-attr">[退出]</span> <span class="hljs-selector-attr">[帮助]</span> <span class="hljs-selector-attr">[写入]</span> <span class="hljs-selector-attr">[转储]</span><br></code></pre></td></tr></table></figure><p>底部的选项的位置可能会随着 cfdisk 的更新发生变化，但是相应选项的功能不会改变。</p><blockquote><p>在硬盘信息处，应该出现一个绿色的<code>Free space</code>，这个就是你在 Windows 中压缩给 Arch Linux 的空间。 将光标通过键盘上下方向键移至<code>Free space</code>，再通过键盘左右方向键选择<code>[New]</code>，以新建分区。</p></blockquote><blockquote><p>新建分区需要手动输入分区大小。 例如新建一个 30G 大小的分区，你应该将光标通过键盘上下方向键移至<code>Free space</code>，再通过键盘左右方向键选择<code>[New]</code>，敲回车后输入<code>30G</code>，然后回车确认</p></blockquote><p>对于怎么分区以及分多大我先要进行一些说明。你可能在其他 Arch Linux 安装教程或者其他别的 Linux   发行版安装教程中看到他们关于分区大小的各种理论或规范，实际上，如何分区、分区多大是没有固定标准的。当你对 Linux   足够熟悉并清楚该如何操作，不分区都是可以的，只要完成 Windows 的引导要求即可。</p><p>这里介绍一个比较通行的分区方法，同时也建议按照如下顺序进行分区。</p><ul><li><code>/boot</code>分区，用来存储启动信息，该分区一般400M足够。 <strong>UEFI 引导时不要分出<code>/boot</code>分区，因为双系统安装会把 Windows 的 EFI 分区挂载到<code>/boot</code>上。</strong></li><li><code>/swap</code>分区，交换分区，相当于Windows的虚拟内存。该分区大小视电脑内存大小而定。电脑小于或等于2G内存则建议设为内存大小的2倍及以上，即 4G，不过太大也没有意义。电脑内存大于2G可以设置为 4G。如果你的内存足够大（大于或等于   8G），也可以考虑不分这个区。你也可以设置交换文件代替交换分区，这里不进行介绍。</li><li><code>/home</code>分区（可选），即用户分区，用于存储用户的数据。该分区是用户自己数据存储的地方。如果你不单独分出 <code>home</code> 分区，则你的所有数据将仅存储在 <code>/mnt </code>分区。你可以将 <code>/mnt</code> 分区理解为 Windows 下的 C 盘，<code>/home</code> 是 Windows 下的 D 盘、E 盘。对于新手，建议不创建单独的 <code>/home</code> 分区；对于有一点经验的用户，建议先创建 <code>/mnt</code> 再创建 <code>/home</code>，并把磁盘剩余的所有空间都留给 <code>/home</code>。</li><li><code>/</code>分区，即根目录，用来存储系统和将来安装的软件等数据，如果你创建单独的 <code>/home</code> 分区，则建议该分区大小不小于 20G，根据你的需求和剩余空间大小而定；如果不创建单独的 <code>/home</code> 分区，请把磁盘所有剩余空间留给 <code>/mnt</code>。</li></ul><blockquote><p>如果电脑是传统BIOS启动，选择<code>[ New ]</code>回车后有可能需要选择建立<code>主分区</code>还是<code>扩展分区</code>。(该情形会在硬盘中没有分区或者主分区不足4个时询问。如果硬盘已经有4个主分区则不会询问，默认建立扩展分区。) EFI启动可以建立无限个主分区，所以不会询问，直接建立主分区。</p></blockquote><blockquote><p>原则上尽量使用主分区。如果主分区用尽，建立扩展分区时注意<strong>不要修改分区大小</strong>，直接回车。因为扩展分区本身<em>不是一个分区</em>。 回车后会发现扩展分区下的硬盘还是剩余空间，只是被划分到扩展分区下了。</p></blockquote><p>按上面建议的分区大小，分别建立四个分区后，选择<code>[ Write ]</code>写入再选择<code>[ Quit ]</code>退出。退出时你需要输入<code>yes</code>确认。*输入完整的<code>yes</code>不是输入一个<code>y</code>*。</p><h2 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h2><p>在终端输入如下命令以检查分区情况：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">fdisk -l</span><br></code></pre></td></tr></table></figure><p>此时屏幕应该显示你当前电脑的硬盘及各硬盘的分区情况。</p><p>分区表应该出现你所新建的分区，且大小与你输入的分区大小一致。</p><p>确认新分区建立无误后，输入如下命令对新建分区进行格式化。这里使用经典的 ext4 文件系统，在你对 Linux 文件系统有一点了解后，你可以换用其他的文件系统，比如 btrfs。</p><blockquote><p>下面所有的分区符号如<code>/dev/sda1</code>仅为示例，实际操作时应该结合自己实际情况进行格式化。 假设新建的<code>/</code>分区符号为<code>/dev/sdb3</code>，则应该输入<code>mkfs.ext4 /dev/sdb3</code>以格式化</p></blockquote><ul><li><p>格式化<code>/</code>分区：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkfs.ext4 <span class="hljs-regexp">/dev/</span>sda1<br></code></pre></td></tr></table></figure></li></ul><p>格式化<code>/boot</code>分区 为了通用性，建议该分区格式化为<code>fat32</code>格式：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkfs.vfat -F32 <span class="hljs-regexp">/dev/</span>sda2<br></code></pre></td></tr></table></figure><p><strong>同上，UEFI引导忽略此步</strong></p><p>初始化<code>/swap</code>分区：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkswap <span class="hljs-regexp">/dev/</span>sda3<br></code></pre></td></tr></table></figure><p>格式化<code>/home</code>分区（如果有）：</p><blockquote><p>这里假设<code>/home</code>分区符号为<code>/dev/sda4</code></p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkfs.ext4 <span class="hljs-regexp">/dev/</span>sda4<br></code></pre></td></tr></table></figure><blockquote><p>格式化分区为 ext4 分区时通常需要输入<code>y</code>以确认。 其他分区格式化，没有报错则意味着操作成功。</p></blockquote><p>接下来挂载分区（<strong>必须最先挂载<code>/</code>分区</strong>）</p><ol><li>挂载<code>/</code>分区：</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mount <span class="hljs-regexp">/dev/</span>sda1 /mnt<br></code></pre></td></tr></table></figure><ol><li>挂载<code>/boot</code>分区： <strong>对于 UEFI 引导，<code>/dev/sda2</code>应该改为 Windows 的 EFI 分区（约100～300MB大小）</strong></li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir -p <span class="hljs-regexp">/mnt/</span>boot<br>mount <span class="hljs-regexp">/dev/</span>sda2 <span class="hljs-regexp">/mnt/</span>boot<br></code></pre></td></tr></table></figure><ol><li><code>/swap</code>分区无需挂载，但是需要输入如下命令启用：</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">swapon <span class="hljs-regexp">/dev/</span>sda3<br></code></pre></td></tr></table></figure><ol><li>建立<code>/home</code>分区目录并挂载分区（如有）：</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/mnt/</span>home<br>mount <span class="hljs-regexp">/dev/</span>sda4 <span class="hljs-regexp">/mnt/</span>home<br></code></pre></td></tr></table></figure><p>至此，硬盘分区和相应目录挂载已经全部完成。</p><blockquote><p>建议再次输入<code>lsblk</code>命令检查硬盘分区情况，一般情况下，每个相应的分区后面应该标注其挂载的目录。</p></blockquote><blockquote><p>以上过程中若出现报错不通过的情况，为了节约排查问题时间，可以直接从重新执行<code>cfdisk</code>命令重新分区开始。<strong>重新分区前，已经挂载好的目录需要进行卸载。</strong> 例，卸载<code>/home</code>分区目录的命令如下： <code>unmount /dev/sda4 /mnt/home</code> </p></blockquote><h2 id="安装-Arch-Linux-基本系统"><a href="#安装-Arch-Linux-基本系统" class="headerlink" title="安装 Arch Linux 基本系统"></a>安装 Arch Linux 基本系统</h2><blockquote><p>Arch Linux 的安装不仅需要连接网络，而且还要从网络下载大量数据。因为 Arch Linux 主服务器在国外，加之某些众所周知的原因，国内网络使用国外服务器下载会非常慢。因此，建议使用国内镜像网站进行下载和安装工作。</p></blockquote><p>输入如下命令，利用 reflector 自动替换国内镜像源</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">reflector</span> <span class="hljs-built_in">--country</span> <span class="hljs-string">&#x27;China&#x27;</span> <span class="hljs-built_in">--age</span> <span class="hljs-string">12</span> <span class="hljs-built_in">--protocol</span> <span class="hljs-string">https</span> <span class="hljs-built_in">--sort</span> <span class="hljs-string">rate</span> <span class="hljs-built_in">--save</span> /<span class="hljs-string">etc</span>/<span class="hljs-string">pacman</span>.<span class="hljs-string">d</span>/<span class="hljs-string">mirrorlist</span><br></code></pre></td></tr></table></figure><p>该命令相对来说比较长，请注意不要打错字符或漏空格。</p><p>修改完镜像源之后，输入如下命令刷新镜像源</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -Syy</span><br></code></pre></td></tr></table></figure><p>下面开始安装基本系统。</p><p>开始之前，我有必要介绍一下 Linux 的 软件包管理程序。Linux 的 包管理 是  Linux 发行版中最重要的软件之一（虽然有的  Linux 发行版没有包管理），不同的 Linux  发行版除非存在关系否则包管理是不同的，Linux 几乎所有的软件都必须通过 包管理 安装。</p><p>包管理安装软件分为在线安装和本地安装。这里仅介绍在线安装。</p><p>在线安装是绝大多数情况下你使用的安装方法。包管理在当前使用的软件镜像源（mirror）中搜索你想要安装的软件包，然后直接下载安装。为了加快在线下载速度，几乎所有 Linux   包管理都会从镜像源下载软件包列表，这样如果需要安装软件的话，可以直接从本地缓存中搜索软件包的下载链接。也因为本地缓存的机制，我们需要经常刷新本地缓存，上面的 <code>pacman -Syy</code> 就是 Arch Linux 刷新本地缓存的方法。</p><p>Arch Linux 的包管理软件叫做 Pacman。Pacman 在线安装软件的命令为  <code>pacman -S 软件包名字</code>  ，关于 Pacman 的更多用法文末会进行介绍。</p><p>输入如下命令借助 <a href="https://git.archlinux.org/arch-install-scripts.git/tree/pacstrap.in">pacstrap</a> 脚本完成安装。pacstrap 是 ArchISO 中的一个脚本，可以自动完成基础但繁琐的系统配置如内核的配置。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">pacstrap /mnt <span class="hljs-keyword">base</span> <span class="hljs-keyword">base</span>-devel linux linux-firmware dhcpcd vim e2fsprogs ntfs<span class="hljs-number">-3</span>g bash-completion iwd<br></code></pre></td></tr></table></figure><p>在上述命令中，base  是元软件包（基本系统所需依赖，必须安装），base-devel 是基础软件包组，linux  是内核，linux-firmware  是固件包，内包含许多硬件驱动，vim 是常用编辑器，e2fsprogs 是 ext4  文件系统所需工具，如果你是按照上面教程使用 ext4  文件系统则必须安装该软件包。ntfs-3g 是与 Windows 的 NTFS   有关的软件包，如果是单系统可以不安装，bash-completion 是命令行补全工具。</p><blockquote><p>你可以将上述命令中的<code>linux</code>替换为 <a href="https://wiki.archlinux.org/index.php/Kernel">Kernel</a> 页面中介绍的内核软件包。如果知道自己的需求并了解后果，可以不安装 <code>linux-firmware</code>.</p></blockquote><blockquote><p>安装过程中会出现选择软件包的提示，建议“默认&#x3D;all”，即直接敲回车默认安装，输入一个“y”确认安装。 在网络不佳的情况下，下载过程可能会出现意外断流，此时重复上面的命令即可。</p></blockquote><p>当安装停止且成功后，输入如下命令以生成 fstab 文件。fstab 是 file system table 的缩写，你可以不知道它是啥但是它必不可少。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">genfstab -U -p <span class="hljs-regexp">/mnt &gt;&gt; /m</span>nt<span class="hljs-regexp">/etc/</span>fstab<br></code></pre></td></tr></table></figure><p>为了确认文件生成，建议输入如下命令以确认：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/mnt/</span>etc/fstab<br></code></pre></td></tr></table></figure><p>确认无误后，输入<code>:</code>后再输入<code>wq</code>退出。</p><p>如果一切正常的话，此时你应该成功在电脑硬盘安装了 Arch Linux 基本系统。</p><h2 id="安装基本系统后的环境配置"><a href="#安装基本系统后的环境配置" class="headerlink" title="安装基本系统后的环境配置"></a>安装基本系统后的环境配置</h2><p>输入如下命令进入新安装的系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">arch-chroot /mnt <br></code></pre></td></tr></table></figure><p>现在你进入了电脑硬盘上的 Arch Linux 。</p><p>如果一切正常的话，细心的你会发现提示符由 <code>root@archiso ~ #</code> 变为 <code>[root@archiso /]#</code>。</p><p>上面有提及，Linux 中默认有一个用户叫 <code>root</code>，拥有对系统的一切权力。这意味着，即使让系统删除自己本身也会执行无误，比如著名命令 <code>rm -rf /*</code>，<strong>千万不要输入这个命令，否则后果自负</strong>。</p><p>现在安装系统默认使用的是 root 用户。</p><p>输入下面命令来设置 root 用户密码：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">passwd root</span><br></code></pre></td></tr></table></figure><blockquote><p>输入密码后需要回车确认，密码需要输入两次。</p><p>密码在输入的时候不会显示，不用担心是自己键盘坏了。</p></blockquote><p>因为root用户权力过大大，即使删掉系统本身，也会被执行。为了避免日常使用因为权限过高造成某些不可逆而又本可以避免的损失，Linux  桌面用户需要添加一个普通用户，且该用户可以获取临时root权限。 一般情况下，这个新添加的用户将会是你后续登录 Linux 的<em>主要用户</em>。</p><p>执行以下命令新建一个隶属于 wheel 组的新用户。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">useradd -m -G wheel -s <span class="hljs-regexp">/bin/</span>bash 你的用户名 <br></code></pre></td></tr></table></figure><p>这里友情提醒一下，上面所设的用户名必须是小写字母，而且最好短一点（如果你不怕之后使用麻烦的话就随意吧）。</p><p>输入如下命令为新建用户设置密码（修改密码也是这个命令），密码不少于 6 位或 8 位。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">passwd</span> 你的用户名<br></code></pre></td></tr></table></figure><blockquote><p>同上，密码需要输入两次，且密码不会显示。</p><p>因为这个密码在日常使用中可能需要经常输入，所以建议密码不要太长。</p></blockquote><p>为了该普通用户能获取临时 root 权限，我们需要修改 wheel 的权限设置。 输入如下命令打开sudoers文件：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">EDITOR</span>=vim visudo  <span class="hljs-comment"># 需要以 root 用户运行 visudo 命令</span><br></code></pre></td></tr></table></figure><p>在打开的文件中找到以下内容：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada"># %wheel <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>) <span class="hljs-keyword">ALL</span><br></code></pre></td></tr></table></figure><p>确认无误后， 输入<code>i</code>， 把<code>%wheel</code>前面的注释符号（#）去掉，（%）要留下。 最后的结果应该是下面这样：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">%wheel <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>) <span class="hljs-keyword">ALL</span><br></code></pre></td></tr></table></figure><p>单击<code>esc</code>键后输入<code>:wq</code>，然后保存退出。</p><blockquote><p>后续若需要普通用户在执行某条命令时临时获得 root 权限，则在该条命令前加上<code>sudo</code></p><p>例：<code>sudo pacman -Syu</code></p><p>在有密码的情况下，使用 sudo 执行命令需要输入 <strong>当前用户的密码</strong> 以二次确认。</p></blockquote><p>如同用户有一个名字一样，Linux 下电脑也需要一个名字。 输入如下命令配置电脑的主机名：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">echo <span class="hljs-string">&#x27;你电脑的主机名&#x27;</span> &gt; <span class="hljs-regexp">/etc/</span>hostname<br></code></pre></td></tr></table></figure><blockquote><p>主机名可以是任何你喜欢的名字，但是不能含空格等字符。</p></blockquote><p>下面对系统 host 进行配置（可选，如果嫌麻烦可以跳过这一步，如果不设置可能会在网络变更时出现应用无法启动等问题）。</p><p>输入以下命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>hosts<br></code></pre></td></tr></table></figure><p>你需要添加相应字符，使得界面如下所示：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">127.0.0.1</span>localhost<br>::<span class="hljs-number">1</span>localhost<br><span class="hljs-number">127.0.1.1</span>你电脑主机名<br></code></pre></td></tr></table></figure><blockquote><p>*如果系统有一个永久的 IP 地址，请使用这个永久的 IP 地址而不是 <code>127.0.1.1</code>*。</p></blockquote><p>确认无误后，输入<code>:wq</code>退出。</p><h2 id="安装微码并配置-Grub-引导"><a href="#安装微码并配置-Grub-引导" class="headerlink" title="安装微码并配置 Grub 引导"></a>安装微码并配置 Grub 引导</h2><p>微码安装命令根据处理器选择。</p><ul><li><p>Intel 用户输入如下命令</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">pacman -S <span class="hljs-built_in">int</span>el-ucode<br></code></pre></td></tr></table></figure></li></ul><p>AMD 用户输入如下命令</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S amd-ucode</span><br></code></pre></td></tr></table></figure><p>至于其他型号的处理器比如国产处理器我就不知道怎么安装了……</p><p><em>以下操作分为传统 <strong>BIOS</strong> 引导和 <strong>UEFI</strong> 引导</em></p><p><em>如果不安装双系统，则不需要安装 os-prober。</em></p><ul><li><p>如果你是传统 <strong>BIOS</strong> 引导，则输入以下命令：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S grub os-prober</span><br></code></pre></td></tr></table></figure></li></ul><p>然后输入以下命令安装到硬盘：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">grub-install <span class="hljs-params">--target=i386-pc</span> <span class="hljs-string">/dev/sda</span> <span class="hljs-params">--recheck</span><br></code></pre></td></tr></table></figure><blockquote><p>第二条命令中<code>/dev/sda</code>应该根据你实际情况，改为你自己硬盘名字</p></blockquote><ul><li><p>如果你是 <strong>UEFI</strong> 引导，则输入以下命令：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S grub efibootmgr os-prober</span><br></code></pre></td></tr></table></figure></li><li><p>然后输入以下命令安装到硬盘：</p></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">grub-install <span class="hljs-attribute">--target</span>=x86_64-efi <span class="hljs-attribute">--efi-directory</span>=/boot <span class="hljs-attribute">--bootloader-id</span>=grub --recheck<br></code></pre></td></tr></table></figure><blockquote><p>如果你未按照上述过程将 EFI 系统分区挂载到 &#x2F;boot ，<em>请自行修改 –efi-directory 的值</em></p></blockquote><p>Grub 2.06 更新后默认禁用 os-prober。虽然我一时半会也还不知道这样做的意义何在，但是上游有改动，我们用户也只能动手适配了。</p><p>输入下面命令为 Grub 启用 os-prober。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">echo <span class="hljs-string">&quot;GRUB_DISABLE_OS_PROBER=false&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span><span class="hljs-keyword">default</span>/grub<br></code></pre></td></tr></table></figure><p>然后输入如下命令生成必要的配置文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">grub-mkconfig -o <span class="hljs-regexp">/boot/g</span>rub/grub.cfg<br></code></pre></td></tr></table></figure><p>注意，你一定要确定输入上面命令有输出结果。</p><p>输出结果大致如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">Generating grub configuration file ...<br>Found linux image: /boot/vmlinuz-linux<br>Found initrd image(s) <span class="hljs-keyword">in</span> /boot: initramfs-linux.img<br>Found fallback initrd image(s) <span class="hljs-keyword">in</span> /boot: initramfs-linux-fallback.img<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><blockquote><p>如果输入上一条命令没任何输出结果，<strong>请务必停下来检查</strong>上面所有步骤有没有哪一处出现问题，或者重新进行所有安装步骤！！</p></blockquote><h2 id="配置语言和区域"><a href="#配置语言和区域" class="headerlink" title="配置语言和区域"></a>配置语言和区域</h2><p>&#x2F;etc&#x2F;locale.gen 是一个仅包含注释文档的文本文件。指定您需要的本地化类型，只需移除对应行前面的注释符号<code>＃</code>即可。（建议选择带 UTF-8 的项） 输入如下命令修改 locale.gen 文件，配置语言环境： <code>vim /etc/locale.gen</code></p><p>分别找到以下字符，删除该行最前面的<code>#</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-id">#en_US</span><span class="hljs-selector-class">.UTF-8</span> UTF-<span class="hljs-number">8</span><br><span class="hljs-selector-id">#zh_CN</span><span class="hljs-selector-class">.UTF-8</span> UTF-<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><blockquote><p>比如，你看到<code>#en_US.UTF-8 UTF-8</code>时，你需要删除该行最前面的<code>#</code>，使之变成<code>en_US.UTF-8 UTF-8</code>。</p></blockquote><blockquote><p>你也可以根据自己需求，添加其他环境。</p></blockquote><p>编辑完成后保存退出。</p><p>退出后输入如下命令刷新区域信息：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">locale-gen</span><br></code></pre></td></tr></table></figure><p>如果你上一步操作无误的话，命令输出结果应该包含</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">en_US</span>.UTF-<span class="hljs-number">8</span> UTF-<span class="hljs-number">8</span><br><span class="hljs-attribute">zh_CN</span>.UTF-<span class="hljs-number">8</span> UTF-<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><p>输入如下命令将区域信息写入 locale-conf 文件：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">echo LANG=en_US.UTF<span class="hljs-number">-8</span> &gt; <span class="hljs-regexp">/etc/</span>locale.conf<br></code></pre></td></tr></table></figure><p>输入如下命令设置时区为亚洲上海：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ln -sf <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/zoneinfo/</span>Asia<span class="hljs-regexp">/Shanghai /</span>etc/localtime<br></code></pre></td></tr></table></figure><h3 id="禁用-reflector"><a href="#禁用-reflector" class="headerlink" title="禁用 reflector"></a>禁用 reflector</h3><p>如果你还有印象的话，在安装过程中我们曾使用 reflector 更换替换国内镜像源。之所以使用 reflector   而不是直接修改文件不是因为这个东东多好用，而是这玩意它会未经你同意自动帮你替换镜像源列表，这样的话还不如直接就先用它替换国内镜像源。在日常使用中，我推荐禁用 reflector（默认应该是禁用状态，如果你喜欢也可以启用，不过它的国内体验非常感人…）。</p><p>输入如下命令禁用并停止 reflector：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">sudo systemctl <span class="hljs-keyword">disable</span> <span class="hljs-comment">--now reflector.service</span><br></code></pre></td></tr></table></figure><p>输入如下命令启用并启动 reflector：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">sudo systemctl <span class="hljs-keyword">enable</span> <span class="hljs-comment">--now reflector.service</span><br></code></pre></td></tr></table></figure><h2 id="安装桌面环境"><a href="#安装桌面环境" class="headerlink" title="安装桌面环境"></a>安装桌面环境</h2><p>没错，对于 Linux 发行版，系统和 GUI 环境是分离的。（GUI 是图形化用户界面的简称）</p><p>一般来说，一个完整的 Linux 操作系统是不需要 GUI 的。如果我们是想将电脑变成一个 Linux 服务器，安装教程可以到此为止，但是对于我们普通的 Linux 桌面用户，则需要安装相应的图形化界面。</p><p>Linux 下的图形化界面可以不严谨地分为窗口管理器（Windows Manager，简称 WM）和桌面环境（Desktop   Environment，简称 DE）。虽然有话说“窗口管理器是所有 Linux 用户的归途”，但是对于新手来说，桌面环境要更为友好一点。</p><p>桌面环境可以不严谨地分为由 X11 驱动和由 Wayland 驱动。</p><ul><li>X11 通常简称为 X，属于 X.Org 项目，也可以粗略地称为 Xorg。Xorg   属于图形化应用程序必备条件，属于无论如何都需要安装地软件包组，是所有桌面环境的依赖（dependence）。几乎所有的桌面环境都支持   X11。X11 的缺点是太过古老、代码的历史残留太多，对高分辨率屏幕（简称  HiDPI，通常指分辨率在 1920x1080  以上的屏幕）支持不佳。</li><li>Wayland 是一个用于混成窗口管理器与其客户端对话的协议，也是实现该协议的一个库。Wayland 的显著优点是对 HiDPI   的支持较好，但是目前还并未普及，因此目前表现的稳定性和兼容性较差。Xwayland 提供了一个兼容层在 Wayland 上运行  X11  软件。但随着 Wayland 的不断改进，Wayland正在变得越来越好，可以预见的是，在未来，Wayland 将代替 Xorg。</li></ul><p>如果你电脑不属于 HiDPI，这里建议先使用 X11 而不是 Wayland。如果你的电脑属于 HiDPI，这里建议尝试 Wayland。</p><p>上面已经说到，Linux   的桌面是独立于系统本身的，也就是说，系统的启动和桌面的启动是完完全全的两码事。如果你不想每次启动系统后都要在黑乎乎的终端手动启动桌面的话，可以借助显示管理器（Display Manager，简称 DM）。显示管理器同样也有很多个，可以和不同的桌面环境交叉使用。</p><p>Arch Linux 可选择的桌面环境很多，这里只介绍相对主流和热门的两个桌面环境，显示管理器会附带介绍。</p><h3 id="KDE"><a href="#KDE" class="headerlink" title="KDE"></a>KDE</h3><p>。基于 Qt 的 KDE 拥有超高的可自定义性、华丽的系统特效、完善的系统功能、人类友好的交互逻辑，以及熟悉的开始菜单。</p><p>虽然 KDE 默认的样式有点感人，但是 KDE 的高度可自定义性让 KDE 可以变得极其华丽甚至长得和 Windows 或 macOS 接近一模一样。不夸张地说，KDE 几乎可以在外观上做到变成用户想要的任何样子，这一点可以参考 KDE 的美化教程的数量。</p><p>除桌面本身以外，KDE 软件也是非常简单好用，自带的系统组件可以满足绝大多数日常桌面需求。</p><p>配合 KDE-Plasma 使用的最佳选择是 SDDM 显示管理器， KDE 和 Arch Wiki 都推荐使用此组合。</p><p>输入如下命令安装 SDDM 和 KDE Plasma 桌面和某些 KDE 基础组件：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">pacman -S plasma-<span class="hljs-keyword">meta</span> konsole dolphin<br></code></pre></td></tr></table></figure><p>目前为止，KDE 默认使用的是 X11，Wayland 支持尚不完善。如果你想使用 Wayland，则需要安装 ，然后在 SDDM 登录时选择 Wayland 版本 Plasma。</p><p>输入如下命令安装 plasma-Wayland：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S plasma-wayland-session</span><br></code></pre></td></tr></table></figure><p>输入如下命令设置 SDDM 开机自启：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">systemctl <span class="hljs-built_in">enable</span> sddm<br></code></pre></td></tr></table></figure><p>输入完命令后，重启，下次开机会直接进入图形界面，而非命令行界面。</p><h3 id="GNOME"><a href="#GNOME" class="headerlink" title="GNOME"></a>GNOME</h3><p>GNOME 被誉为“超像 macOS 的 Linux 桌面”。GNOME 基于 GTK， 是 Ubuntu 等一众 Linux 桌面发行版的默认桌面。</p><p>GNOME 遵循 Material Degisn 设计语言，界面圆润清新，动画优雅舒适，自带功能较少但是扩展插件极多且功能丰富，可自定义性较强，有着先进但是不怎么人类友好的交互逻辑。</p><p>GNOME 默认样式除了图标以外都属于尚可，GTK 的特效和样式丰富的主题让 GNOME 随便配置一下就可以做到简约与美观并存（当然，你可以配置得非常华丽）。</p><p>GNOME 40 正式砍掉了侧边 Dash 栏并将其移动到桌面切换界面的底端，重新定义了 GUI 桌面的操作逻辑。</p><p>因为 GNOME 功能高度依赖扩展，而扩展又大多是非官方人员开发的，所以可能存在各种兼容性问题。</p><p>GNOME 自带软件实用性较差，如果有需求的话，可以使用 KDE 软件作为补充。</p><p>GNOME 有配套的显示管理器 GDM。输入如下命令安装 GNOME 和 GDM。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S gnome gdm</span><br></code></pre></td></tr></table></figure><p>如果想要 GNOME 全家桶的话，可以安装 gnome-extras 软件包组</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S gnome-extras</span><br></code></pre></td></tr></table></figure><p>GNOME 默认使用 Wayland 且表现基本满足日常使用需求，但是如果你使用 Wayland 出现问题，可以通过在 GDM 禁用 Wayland 以更换为 X11。</p><p>我们需要编辑 <code>/etc/gdm/custom.conf</code> 以禁用 Wayland。输入如下命令打开该文件。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/g</span>dm/custom.conf<br></code></pre></td></tr></table></figure><p>在文件中找到以下行：</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lasso">#WaylandEnable=<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><blockquote><p>去除该行开头的 <code>#</code> 注释，然后保存退出。</p><p>重启后下次登录将默认禁用 Wayland。</p></blockquote><p>输入如下命令设置 GDM 开机自启：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">systemctl <span class="hljs-built_in">enable</span> gdm<br></code></pre></td></tr></table></figure><p>输入完命令后，重启，下次开机会直接进入图形界面，而非命令行界面。</p><h2 id="使系统变得可用"><a href="#使系统变得可用" class="headerlink" title="使系统变得可用"></a>使系统变得可用</h2><p>进入桌面后，搜索 konsole、Terminal。它是 KDE、Gnome 桌面环境默认的命令行终端。</p><p>首先先进行桌面环境中的网络设置：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gauss">sudo systemctl <span class="hljs-keyword">disable</span> iwd               <span class="hljs-meta">#确保iwd开机处于关闭状态，其无线连接会与NetworkManager冲突</span><br>sudo systemctl <span class="hljs-keyword">stop</span> iwd                  <span class="hljs-meta">#同上，立即关闭iwd</span><br>sudo systemctl <span class="hljs-keyword">enable</span> --now NetworkManager<span class="hljs-meta">#确保先启动NetworkManager，并进行网络连接 若iwd已经与NetworkManager冲突 则执行完上一步重启一下电脑即可。</span><br></code></pre></td></tr></table></figure><p>接下来安装一些基础功能包。</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs gauss">sudo pacman -S sof-firmware alsa-firmware alsa-ucm-conf                     <span class="hljs-meta">#一些可能需要的声音固件</span><br>sudo pacman -S ntfs<span class="hljs-number">-3</span>g                                                      <span class="hljs-meta">#识别NTFS格式的硬盘</span><br>sudo pacman -S adobe-source-han-serif-cn-<span class="hljs-built_in">fonts</span> wqy-zenhei                   <span class="hljs-meta">#安装几个开源中文字体 一般装上文泉驿就能解决大多wine应用中文方块的问题</span><br>sudo pacman -S noto-<span class="hljs-built_in">fonts</span>-cjk noto-<span class="hljs-built_in">fonts</span>-emoji noto-<span class="hljs-built_in">fonts</span>-extra             <span class="hljs-meta">#安装谷歌开源字体及表情</span><br>sudo pacman -S firefox chromium                                             <span class="hljs-meta">#安装常用的火狐、谷歌浏览器</span><br>sudo pacman -S ark （KDE需要 Gnome自带）                                                         <span class="hljs-meta">#与dolphin同用右键解压</span><br>sudo pacman -S p7zip unrar unarchiver lzop lrzip  （KDE需要）                         <span class="hljs-meta">#安装ark可选依赖</span><br>sudo pacman -S packagekit-qt5 packagekit appstream-qt appstream   （KDE需要）        <span class="hljs-meta">#确保Discover(软件中心）可用 需重启</span><br>sudo pacman -S gwenview    （KDE需要）                                                 <span class="hljs-meta">#图片查看器</span><br>sudo pacman -S git wget kate （KDE需要） bind                                                <span class="hljs-meta">#一些工具</span><br></code></pre></td></tr></table></figure><h3 id="安装中文输入法"><a href="#安装中文输入法" class="headerlink" title="安装中文输入法"></a>安装中文输入法</h3><p>安装 fcitx5 输入法模块：</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs julia">sudo pacman -S fcitx5-<span class="hljs-literal">im</span> fcitx5-chinese-addons <br></code></pre></td></tr></table></figure><p>配置输入法的环境变量，输入如下命令编辑 &#x2F;etc&#x2F;environment</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo vim <span class="hljs-regexp">/etc/</span>environment<br></code></pre></td></tr></table></figure><p>在文件中添加以下内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">GTK_IM_MODULE</span>=fcitx<br><span class="hljs-attr">QT_IM_MODULE</span>=fcitx<br><span class="hljs-attr">XMODIFIERS</span>=@im=fcitx<br><span class="hljs-attr">SDL_IM_MODULE</span>=fcitx<br></code></pre></td></tr></table></figure><p>　　修改完成后，保存退出。</p><blockquote><p>重启电脑后在 fcitx 设置即可选择中文输入法。你也可以根据自己的需求安装其他输入法，如搜狗输入法。</p></blockquote><h3 id="添加-Arch-Linux-CN-源"><a href="#添加-Arch-Linux-CN-源" class="headerlink" title="添加 Arch Linux CN 源"></a>添加 Arch Linux CN 源</h3><p>输入如下命令编辑 pacman.conf 文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo vim <span class="hljs-regexp">/etc/</span>pacman.conf<br></code></pre></td></tr></table></figure><p>在该文件末尾添加以下内容</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">[archlinuxcn]<br>Server = https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/archlinuxcn/</span><span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><p>接着输入如下命令刷新源：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo pacman -Syy</span><br></code></pre></td></tr></table></figure><p>然后安装密匙：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo pacman -S archlinuxcn-keyring</span><br></code></pre></td></tr></table></figure><blockquote><p>若密匙安装出错，则依次输入以下命令解决：</p></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sudo pacman -Syu haveged<br>systemctl enable <span class="hljs-params">--now</span> haveged<br>rm -rf <span class="hljs-string">/etc/pacman.d/gnupg</span><br>sudo pacman-key <span class="hljs-params">--init</span><br>sudo pacman-key <span class="hljs-params">--populate</span> archlinux<br>sudo pacman-key <span class="hljs-params">--populate</span> archlinuxcn<br>sudo pacman -S archlinuxcn-keyring<br></code></pre></td></tr></table></figure><blockquote><p>Arch Linux 中文社区仓库是由 Arch Linux 中文社区驱动的非官方软件仓库，包含许多官方仓库未提供的额外的软件包，以及已有软件的 git 版本等变种。一部分软件包的打包脚本来源于 AUR，但也有许多包与 AUR 不一样。 详情见 <a href="https://www.archlinuxcn.org/archlinux-cn-repo-and-mirror/">Arch 中文社区</a></p></blockquote><h3 id="安装-paru"><a href="#安装-paru" class="headerlink" title="安装 paru"></a>安装 paru</h3><p>paru是目前比较好用的 <a href="https://wiki.archlinux.org/index.php/Arch_User_Repository_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">AUR</a> 助手之一，可以方便快捷地帮助你完成 AUR 软件的安装。 archlinuxcn 中已经包含 paru，可以输入如下命令直接安装 ：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo pacman -S paru</span><br></code></pre></td></tr></table></figure><blockquote><p>paru 使用上与 Pacman 大致一致。 应避免以 root 权限运行 paru，即避免&#96;sudo paru这样的命令。 你也可以选择其他的 AUR 助手。</p></blockquote><p>有了paru，我们可以直接输入命令安装 AUR 的软件，比如，我们可以输入如下命令安装 Chrome。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">paru -S google-chrome</span><br></code></pre></td></tr></table></figure><h3 id="解决-Windows-加密问题"><a href="#解决-Windows-加密问题" class="headerlink" title="解决 Windows 加密问题"></a>解决 Windows 加密问题</h3><p>如果你是双系统安装，则输入以下命令安装 dislocker 。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yay -S dislocker</span><br></code></pre></td></tr></table></figure><p>然后输入如下命令再次生成配置文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo grub-mkconfig -o <span class="hljs-regexp">/boot/g</span>rub/grub.cfg<br></code></pre></td></tr></table></figure><p>如果一切正常，现在输出结果中应该含有<code>Windows</code>字样 <del>如果没有的话，我也不知道怎么办了</del></p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/10/02/hello-world/"/>
    <url>/2022/10/02/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
